//コマンドテーブル skillは格ゲーコマンド表記
btl_debPrint2("\n[MER_CommandTable]");

local t =
{
	Skill_41236SP_ABC = {},
	Skill_41236SP = {},
	Skill_41236EX = {},
	
	Skill_J41236EX = {},
	
	Skill_236EX = {},
	Skill_236BorC = {},
	Skill_236A = {}
	
	Skill_623EX = {},
	Skill_623BorC = {},
	Skill_623A = {},
	
	Skill_214EX = {},
	Skill_214BorC = {},
	Skill_214A = {},

	Skill_0202A = {
		CmdCheck = {
			BallLimit = { [1] = 1 }
		}
	},

	Skill_0202BorC = {
		CmdCheck = {
			BallLimit = { [1] = 1 }
		}
	},
	
	Skill_0202EX = {
		CmdCheck = {
			BallLimit = { [1] = 1 }
		}
	},

	Skill_J214EX = {},
	Skill_J214BorC = {},
	Skill_J214A = {},

	Atk_Std6C = {},
	Atk_Std4C = {},
	Atk_Cro3C = {},
	Atk_Std4B = {},

	Atk_2C_2C = {},	
	Atk_Air2C = {},
	
	//4C派生3C
	Add_4C_3C =
	{
		num = def_CN_Skill_AddCommand10, name = "Cmd_Add_4C_3C", command = [ "3+C" ],
		CmdCheck = 
		{
			SkillType = "AddCommand", ParamFlagCheck = { Only = { [2]=1 } },
			HitStatus = "Hit",
			MvCheck = { Only = ["Mv_Atk_Std4C"] },
		},
		UpdateTable = { name = "Mv_Atk_Cro3C", }
	}	
	
	MultiJump_F =
	{
		CmdCheck = { HeightLimit = def_POS_AirDashLimitHeight, },
		UpdateTable = { name = "Mv_Skill_JFly", }
	},
	MultiJump_N =
	{
		command = "08",
		CmdCheck = { HeightLimit = def_POS_AirDashLimitHeight, },
		UpdateTable = { name = "Mv_Skill_JFly", }
	},
	MultiJump_B =
	{
		CmdCheck = { HeightLimit = def_POS_AirDashLimitHeight, },
		UpdateTable = { name = "Mv_Skill_JFly", }
	},

	/*
	//強すぎﾜﾛﾀ
	MultiJumpCancel_F = { CmdCheck = { HeightLimit = def_POS_AirDashLimitHeight, }, UpdateTable = { name = "Mv_Skill_JFly", }	},
	MultiJumpCancel_N = { CmdCheck = { HeightLimit = def_POS_AirDashLimitHeight, }, UpdateTable = { name = "Mv_Skill_JFly", }	},
	MultiJumpCancel_B = { CmdCheck = { HeightLimit = def_POS_AirDashLimitHeight, }, UpdateTable = { name = "Mv_Skill_JFly", }	},	
	*/
	
	Add_JFlyDash =
	{
		num = def_CN_Skill_AddCommand1, name = "Cmd_Add_JFlyDash", command = [ "0606" ], posstatus = _PosState_Air,
		CmdCheck = 
		{
			SkillType = "Normal", PosState="Air", 
			MvCheck = { Only = ["Mv_Skill_JFly"] },
		},		
		UpdateTable = { name = "Mv_Skill_JFlyDash", }
	}	
	
	Add_3C_JFly =
	{
		num = def_CN_Skill_AddCommand2, name = "Cmd_Add_3C_JFly", command = [ "^" ], posstatus = _PosState_Air,
		CmdCheck = 
		{
			SkillType = "AddCommand", PosState="Air", 
			MvCheck = { Only = ["Mv_Atk_Cro3C"] },
			ParamFlagCheck = { Only = { [3]=1 } },
		},
		function CmdBeforeFunc()
		{
			// 3CのParam3 & 2 のときはヒット時じゃないと派生不可
			local mvs = BMvTbl.GetMvStatus();
			if( mvs.Param3 & 2 )
			{
				// ヒット情報をチェック
				local hs = BMvTbl.GetMvHitStatus();
				if( !(hs.Type & _HitType_Hit ) ) return 0;
			}
			return 1;
		}
		UpdateTable = { name = "Mv_Skill_3C_JAddJump", }
	}	
	
	Atk_B_B =
	{
		CmdCheck =
		{
			SkillType = "AddCommand"
			MvCheck = { Only = ["Mv_Atk_StdB"] },
			FrameIDCheck = { Only = 10 },
		},
	},	
	
	Atk_StdBandC = {},
	
	Skill_J0202B = 
	{
		command = ["0404","4+A+B"],
		flags = [ "lastdelay" ],
		function CmdBeforeFunc()
		{
			if( BMvTbl.AddAirCount( 0, 0 ) != 0 ) return 0;
			
			return 1;
		}
		//高度制限をつける
		CmdCheck = {
			HeightLimit = def_POS_AirDashLimitHeight,
			SkillType="SpecialDouji",
		}
	},
	
}

local ar =
[
	{
		CheckMoveName="Mv_Atk_StdA",
		UpdateMoveName="Mv_Atk_Std4B",
	},
	{
		CheckMoveName="Mv_Atk_Std4B",
		UpdateMoveName="Mv_Atk_StdC",
		ResetTmplName="Atk_Std4B",
	},
	{
		CheckMoveName="Mv_Atk_StdC",
		UpdateMoveName="Mv_Skill_236B",
		ResetTmplName="Atk_StdC",
		CmdTmplFlags=def_CMDFlags_AnnounceSmaetSteer, //スマートステアアナウンスの追加
	},
	{
		CheckMoveName="Mv_Skill_236B",
		UpdateMoveName="Mv_Skill_41236EX",
		ResetTmplName="Skill_236BorC",
		CmdCheck = 
		{
			Cost = { ComboGauge = 10000 },
			SkillType = "ExSpecial",
			HitStatus="Damage",
		}	
	},
]
Battle_Std.MakeStdCombo( t, ar );

MER_CommandTable <- Battle_Std.MakeCommandTable( t );

