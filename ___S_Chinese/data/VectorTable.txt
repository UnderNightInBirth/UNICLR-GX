// vectorlist
const def_VL_PrintDebugMessage	= 1;	// VectorList作成時のエラーチェック表示をするか

// なんとなく定数定義
const def_VL_GuardPat_Ground	= 17;
const def_VL_GuardPat_Air 		= 19;
const def_VL_GuardPat_Crouch	= 18;
const def_VL_NagenukePat		= 412;
const def_VL_NagenukerarePat	= 17;

//ベクトルタイム
const def_VL_VT_Hit_Std_LV1		= 13; // Ver.1.03:13
const def_VL_VT_Hit_Std_LV2		= 16; // Ver.1.03:16
const def_VL_VT_Hit_Std_LV3		= 18; // Ver.1.03:18
const def_VL_VT_Hit_Std_LV4		= 23; // Ver.1.03:23
const def_VL_VT_Hit_Std_LV5		= 26; // 未使用
const def_VL_VT_Hit_Std_LV3p	= 20;

//reflexhit_vector
const def_VL_VT_Hit_Std_RLV1		= 11;
const def_VL_VT_Hit_Std_RLV2		= 14;
const def_VL_VT_Hit_Std_RLV3		= 17;
const def_VL_VT_Hit_Std_RLV4		= 19;
const def_VL_VT_Hit_Std_RLV5		= 24;

const def_VL_VT_Hit_Cro_LV1		= 14;
const def_VL_VT_Hit_Cro_LV2		= 17;
const def_VL_VT_Hit_Cro_LV3		= 19;
const def_VL_VT_Hit_Cro_LV4		= 24;
const def_VL_VT_Hit_Cro_LV5		= 27;
const def_VL_VT_Hit_Cro_LV3p	= 21;

//reflexhit_vector
const def_VL_VT_Hit_Cro_RLV1		= 12;
const def_VL_VT_Hit_Cro_RLV2		= 15;
const def_VL_VT_Hit_Cro_RLV3		= 18;
const def_VL_VT_Hit_Cro_RLV4		= 20;
const def_VL_VT_Hit_Cro_RLV5		= 25;


/*
const def_VL_VT_Hit_Std_LV1		= 18;
const def_VL_VT_Hit_Std_LV2		= 21;
const def_VL_VT_Hit_Std_LV3		= 23;
const def_VL_VT_Hit_Std_LV4		= 28;
const def_VL_VT_Hit_Std_LV5		= 31;

const def_VL_VT_Hit_Cro_LV1		= 19;
const def_VL_VT_Hit_Cro_LV2		= 22;
const def_VL_VT_Hit_Cro_LV3		= 24;
const def_VL_VT_Hit_Cro_LV4		= 18;
const def_VL_VT_Hit_Cro_LV5		= 18;
*/

const def_VL_VT_Hit_Air_LV0		= 16; //14
const def_VL_VT_Hit_Air_LV1		= 18; //14
const def_VL_VT_Hit_Air_LV2		= 20; //20
const def_VL_VT_Hit_Air_LV3		= 22; //24
const def_VL_VT_Hit_Air_LV4		= 24;
const def_VL_VT_Hit_Air_LV5		= 26;

//reflexhit_vector
const def_VL_VT_Hit_Air_RLV0	= 15; //14
const def_VL_VT_Hit_Air_RLV1	= 17; //14
const def_VL_VT_Hit_Air_RLV2	= 19; //20
const def_VL_VT_Hit_Air_RLV3	= 21; //24
const def_VL_VT_Hit_Air_RLV4	= 23;
const def_VL_VT_Hit_Air_RLV5	= 25;

//地上やられのけぞり時間
const def_VL_VT_Guard_Std_LV1	= 11; //ヒット13
const def_VL_VT_Guard_Std_LV2	= 15; //ヒット16
const def_VL_VT_Guard_Std_LV3	= 17; //ヒット18
const def_VL_VT_Guard_Std_LV4	= 22; //ヒット23
const def_VL_VT_Guard_Std_LV5	= 25; //ヒット26
const def_VL_VT_Guard_Std_LV3p	= 19; //ヒット20

const def_VL_VT_Guard_Air_LV1	= 9;
const def_VL_VT_Guard_Air_LV2	= 13;
const def_VL_VT_Guard_Air_LV3	= 17;
const def_VL_VT_Guard_Air_LV4	= 20;
const def_VL_VT_Guard_Air_LV5	= 22;
const def_VL_VT_Guard_Air_LV3p	= 19;


const def_VL_KoVector = 299; // そのベクトルでKOした時に代わりに使うベクトル番号
const def_VL_GroundKoVector = 254; // そのベクトルでKOした時に代わりに使うベクトル番号

const def_VL_HitFlag_AirAtkA	= 0; //空攻撃浮き弱
const def_VL_HitFlag_AirAtkB	= 1; //空攻撃浮き中
const def_VL_HitFlag_AirAtkC	= 2; //空攻撃浮き強
//const def_VL_HitFlag_Aerial	= 3; //エリアル吹き飛び（ジャンプ攻撃の浮きが高くなる）　廃止

// ※実はフラグになっている
const def_VL_Pow_LV0			= 1; //超弱（無声やられ）
const def_VL_Pow_LV1			= 2; //弱やられ
const def_VL_Pow_LV2			= 0; //デフォルトは中やられ(初期値は0なので)
const def_VL_Pow_LV3			= 4; //強やられ
const def_VL_Pow_Furimuki		= 8; // 振り向き属性（攻撃してきたものに振り向く。基本は相手操作親の向き依存。）
const def_VL_Pow_GuardFloat		= 32; // ガードで浮くやつ（無敵がつく）

//ベクトル登録を楽にするためのテーブル
VectorSample <- {}; // テーブル生成
VectorSample.Tbl <- []; // Tbl生成
//VectorSample.Tbl.resize(100); // 適当に拡張

VectorSample.Tbl.append(
{
	name = "ＧＣ吹き飛ばし",
	hit_stand	= { num="GC吹き飛ばし"	, reverse=0, novec=0 },
	hit_air		= { num="GC吹き飛ばし"	, reverse=0, novec=0 },
	hit_crouch	= { num="GC吹き飛ばし"	, reverse=0, novec=0 },
	guard_stand	= { num="GC立ガード"	, reverse=0, novec=0 },
	guard_air	= { num="GC空ガード"	, reverse=0, novec=0 },
	guard_crouch	= { num="GC屈ガード"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "空攻撃弱",
	hit_stand	= { num="空攻撃頭やられ弱"	, reverse=0, novec=0 },
	hit_air		= { num="空攻撃浮き弱"	, reverse=0, novec=0 },
	hit_crouch	= { num="空攻撃屈やられ弱"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード弱"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード弱"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード弱"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "空攻撃中",
	hit_stand	= { num="空攻撃頭やられ中"	, reverse=0, novec=0 },
	hit_air		= { num="空攻撃浮き中"	, reverse=0, novec=0 },
	hit_crouch	= { num="空攻撃屈やられ中"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード中"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード中"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード中"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "空攻撃強",
	hit_stand	= { num="空攻撃頭やられ強"	, reverse=0, novec=0 },
	hit_air		= { num="空攻撃浮き強"	, reverse=0, novec=0 },
	hit_crouch	= { num="空攻撃屈やられ強"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード強"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード強"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード強"	, reverse=0, novec=0 },
})


VectorSample.Tbl.append(
{
	name = "頭やられ弱",
	hit_stand	= { num="頭やられ弱"	, reverse=0, novec=0 },
	hit_air		= { num="ダウン弱"	, reverse=0, novec=0 },
	hit_crouch	= { num="屈やられ弱"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード弱"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード弱"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード弱"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "頭やられ中",
	hit_stand	= { num="頭やられ中"	, reverse=0, novec=0 },
	hit_air		= { num="追撃ダウン"	, reverse=0, novec=0 },
	hit_crouch	= { num="屈やられ中"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード中"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード中"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード中"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "頭やられ強",
	hit_stand	= { num="頭やられ強"	, reverse=0, novec=0 },
	hit_air		= { num="追撃ダウン"	, reverse=0, novec=0 },
	hit_crouch	= { num="屈やられ強"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード強"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード強"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード強"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "腹やられ弱",
	hit_stand	= { num="腹やられ弱"	, reverse=0, novec=0 },
	hit_air		= { num="ダウン弱"	, reverse=0, novec=0 },
	hit_crouch	= { num="屈やられ弱"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード弱"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード弱"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード弱"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "腹やられ中",
	hit_stand	= { num="腹やられ中"	, reverse=0, novec=0 },
	hit_air		= { num="追撃ダウン"	, reverse=0, novec=0 },
	hit_crouch	= { num="屈やられ中"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード中"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード中"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード中"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "腹やられ強",
	hit_stand	= { num="腹やられ強"	, reverse=0, novec=0 },
	hit_air		= { num="追撃ダウン"	, reverse=0, novec=0 },
	hit_crouch	= { num="屈やられ強"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード強"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード強"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード強"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "追撃ダウン",
	hit_stand	= { num="追撃ダウン"	, reverse=0, novec=0 },
	hit_air		= { num="追撃ダウン"	, reverse=0, novec=0 },
	hit_crouch	= { num="追撃ダウン"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード強"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード強"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード強"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "腹吹き飛び",
	hit_stand	= { num="腹吹き飛び"	, reverse=0, novec=0 },
	hit_air		= { num="腹吹き飛び"	, reverse=0, novec=0 },
	hit_crouch	= { num="腹吹き飛び"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード強"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード強"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード強"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "小腹吹き飛び",
	hit_stand	= { num="小腹吹き飛び"	, reverse=0, novec=0 },
	hit_air		= { num="小腹吹き飛び"	, reverse=0, novec=0 },
	hit_crouch	= { num="小腹吹き飛び"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード強"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード強"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード強"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "中腹吹き飛び",
	hit_stand	= { num="中腹吹き飛び"	, reverse=0, novec=0 },
	hit_air		= { num="中腹吹き飛び"	, reverse=0, novec=0 },
	hit_crouch	= { num="中腹吹き飛び"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード強"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード強"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード強"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "後ろ転倒",
	hit_stand	= { num="後ろ転倒"	, reverse=0, novec=0 },
	hit_air		= { num="後ろ転倒"	, reverse=0, novec=0 },
	hit_crouch	= { num="後ろ転倒"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード強"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード強"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード強"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "前転倒",
	hit_stand	= { num="前転倒"	, reverse=0, novec=0 },
	hit_air		= { num="前転倒"	, reverse=0, novec=0 },
	hit_crouch	= { num="前転倒"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード強"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード強"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード強"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "きりもみ転倒",
	hit_stand	= { num="きりもみ転倒"	, reverse=0, novec=0 },
	hit_air		= { num="きりもみ転倒"	, reverse=0, novec=0 },
	hit_crouch	= { num="きりもみ転倒"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード強"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード強"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード強"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "きりもみ低転倒",
	hit_stand	= { num="きりもみ低転倒"	, reverse=0, novec=0 },
	hit_air		= { num="きりもみ低転倒"	, reverse=0, novec=0 },
	hit_crouch	= { num="きりもみ低転倒"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード強"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード強"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード強"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "垂直吹き飛び",
	hit_stand	= { num="垂直吹き飛び"	, reverse=0, novec=0 },
	hit_air		= { num="垂直吹き飛び"	, reverse=0, novec=0 },
	hit_crouch	= { num="垂直吹き飛び"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード強"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード強"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード強"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "低垂直吹き飛び",
	hit_stand	= { num="低垂直吹き飛び"	, reverse=0, novec=0 },
	hit_air		= { num="低垂直吹き飛び"	, reverse=0, novec=0 },
	hit_crouch	= { num="低垂直吹き飛び"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード強"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード強"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード強"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "きりもみ垂直浮き",
	hit_stand	= { num="きりもみ垂直浮き"	, reverse=0, novec=0 },
	hit_air		= { num="きりもみ垂直浮き"	, reverse=0, novec=0 },
	hit_crouch	= { num="きりもみ垂直浮き"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード強"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード強"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード強"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "斜め上吹き飛び",
	hit_stand	= { num="斜め上吹き飛び"	, reverse=0, novec=0 },
	hit_air		= { num="斜め上吹き飛び"	, reverse=0, novec=0 },
	hit_crouch	= { num="斜め上吹き飛び"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード強"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード強"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード強"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "きりもみ吹き飛び",
	hit_stand	= { num="きりもみ吹き飛び"	, reverse=0, novec=0 },
	hit_air		= { num="きりもみ吹き飛び"	, reverse=0, novec=0 },
	hit_crouch	= { num="きりもみ吹き飛び"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード強"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード強"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード強"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "きりもみ壁吹き飛び",
	hit_stand	= { num="きりもみ壁吹き飛び"	, reverse=0, novec=0 },
	hit_air		= { num="きりもみ壁吹き飛び"	, reverse=0, novec=0 },
	hit_crouch	= { num="きりもみ壁吹き飛び"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード強"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード強"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード強"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "真下叩きつけ",
	hit_stand	= { num="真下叩きつけ"	, reverse=0, novec=0 },
	hit_air		= { num="真下叩きつけ"	, reverse=0, novec=0 },
	hit_crouch	= { num="真下叩きつけ"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード強"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード強"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード強"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "真下バウンド",
	hit_stand	= { num="真下バウンド"	, reverse=0, novec=0 },
	hit_air		= { num="真下バウンド"	, reverse=0, novec=0 },
	hit_crouch	= { num="真下バウンド"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード強"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード強"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード強"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "斜め下浮き",
	hit_stand	= { num="斜め下浮き"	, reverse=0, novec=0 },
	hit_air		= { num="斜め下浮き"	, reverse=0, novec=0 },
	hit_crouch	= { num="斜め下浮き"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード強"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード強"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード強"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "斜め下叩きつけ",
	hit_stand	= { num="斜め下叩きつけ"	, reverse=0, novec=0 },
	hit_air		= { num="斜め下叩きつけ"	, reverse=0, novec=0 },
	hit_crouch	= { num="斜め下叩きつけ"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード強"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード強"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード強"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "斜め下バウンド",
	hit_stand	= { num="斜め下バウンド"	, reverse=0, novec=0 },
	hit_air		= { num="斜め下バウンド"	, reverse=0, novec=0 },
	hit_crouch	= { num="斜め下バウンド"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード強"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード強"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード強"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "斜め下すべり",
	hit_stand	= { num="斜め下すべり"	, reverse=0, novec=0 },
	hit_air		= { num="斜め下すべり"	, reverse=0, novec=0 },
	hit_crouch	= { num="斜め下すべり"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード強"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード強"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード強"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "しりもち",
	hit_stand	= { num="しりもち"	, reverse=0, novec=0 },
	hit_air		= { num="追撃ダウン"	, reverse=0, novec=0 },
	hit_crouch	= { num="しりもち"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード強"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード強"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード強"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "崩れ落ちダウン",
	hit_stand	= { num="崩れ落ちダウン"	, reverse=0, novec=0 },
	hit_air		= { num="追撃ダウン"	, reverse=0, novec=0 },
	hit_crouch	= { num="崩れ落ちダウン"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード強"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード強"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード強"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "投げ抜けられやられ",
	hit_stand	= { num="投げ抜けられやられ"	, reverse=0, novec=0 },
	hit_air		= { num="投げ抜けられやられ"	, reverse=0, novec=0 },
	hit_crouch	= { num="投げ抜けられやられ"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード強"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード強"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード強"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "無声ダウン",
	hit_stand	= { num="無声ダウン"	, reverse=0, novec=0 },
	hit_air		= { num="無声ダウン"	, reverse=0, novec=0 },
	hit_crouch	= { num="無声ダウン"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード強"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード強"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード強"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "横浮きダウン",
	hit_stand	= { num="横浮きダウン"	, reverse=0, novec=0 },
	hit_air		= { num="横浮きダウン"	, reverse=0, novec=0 },
	hit_crouch	= { num="横浮きダウン"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード強"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード強"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード強"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "超横浮きダウン",
	hit_stand	= { num="超横浮きダウン"	, reverse=0, novec=0 },
	hit_air		= { num="超横浮きダウン"	, reverse=0, novec=0 },
	hit_crouch	= { num="超横浮きダウン"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード強"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード強"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード強"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "横浮きバウンド",
	hit_stand	= { num="横浮きバウンド"	, reverse=0, novec=0 },
	hit_air		= { num="横浮きバウンド"	, reverse=0, novec=0 },
	hit_crouch	= { num="横浮きバウンド"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード強"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード強"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード強"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "横吹きバウンド",
	hit_stand	= { num="横吹きバウンド"	, reverse=0, novec=0 },
	hit_air		= { num="横吹きバウンド"	, reverse=0, novec=0 },
	hit_crouch	= { num="横吹きバウンド"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード強"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード強"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード強"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "崩れ落ちダウン",
	hit_stand	= { num="崩れ落ちダウン"	, reverse=0, novec=0 },
	hit_air		= { num="追撃ダウン"	, reverse=0, novec=0 },
	hit_crouch	= { num="崩れ落ちダウン"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード強"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード強"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード強"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "きり吹飛小壁",
	hit_stand	= { num="きり吹飛小壁"	, reverse=0, novec=0 },
	hit_air		= { num="きり吹飛小壁"	, reverse=0, novec=0 },
	hit_crouch	= { num="きり吹飛小壁"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード強"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード強"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード強"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "きり浮飛小壁",
	hit_stand	= { num="きり浮飛小壁"	, reverse=0, novec=0 },
	hit_air		= { num="きり浮飛小壁"	, reverse=0, novec=0 },
	hit_crouch	= { num="きり浮飛小壁"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード強"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード強"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード強"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "超斜め腹吹き飛び小壁バウンド",
	hit_stand	= { num="超斜め腹吹き飛び小壁バウンド"	, reverse=0, novec=0 },
	hit_air		= { num="超斜め腹吹き飛び小壁バウンド"	, reverse=0, novec=0 },
	hit_crouch	= { num="超斜め腹吹き飛び小壁バウンド"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード強"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード強"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード強"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "超腹吹き飛び小壁バウンド",
	hit_stand	= { num="超腹吹き飛び小壁バウンド"	, reverse=0, novec=0 },
	hit_air		= { num="超腹吹き飛び小壁バウンド"	, reverse=0, novec=0 },
	hit_crouch	= { num="超腹吹き飛び小壁バウンド"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード強"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード強"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード強"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "腹吹き飛び小壁バウンド",
	hit_stand	= { num="腹吹き飛び小壁バウンド"	, reverse=0, novec=0 },
	hit_air		= { num="腹吹き飛び小壁バウンド"	, reverse=0, novec=0 },
	hit_crouch	= { num="腹吹き飛び小壁バウンド"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード強"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード強"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード強"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "頭やられ中CH尻",
	hit_stand	= { num="頭やられ中CH尻"	, reverse=0, novec=0 },
	hit_air		= { num="追撃ダウン"	, reverse=0, novec=0 },
	hit_crouch	= { num="屈やられ中CH尻"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード中"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード中"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード中"	, reverse=0, novec=0 },
})
VectorSample.Tbl.append(
{
	name = "頭やられ強CH尻",
	hit_stand	= { num="頭やられ強CH尻"	, reverse=0, novec=0 },
	hit_air		= { num="追撃ダウン"	, reverse=0, novec=0 },
	hit_crouch	= { num="屈やられ強CH尻"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード強"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード強"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード強"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "腹やられ中CH尻",
	hit_stand	= { num="腹やられ中CH尻"	, reverse=0, novec=0 },
	hit_air		= { num="追撃ダウン"	, reverse=0, novec=0 },
	hit_crouch	= { num="屈やられ中CH尻"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード中"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード中"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード中"	, reverse=0, novec=0 },
})
VectorSample.Tbl.append(
{
	name = "頭やられ強CH尻",
	hit_stand	= { num="腹やられ強CH尻"	, reverse=0, novec=0 },
	hit_air		= { num="追撃ダウン"	, reverse=0, novec=0 },
	hit_crouch	= { num="屈やられ強CH尻"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード強"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード強"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード強"	, reverse=0, novec=0 },
})

VectorSample.Tbl.append(
{
	name = "しりもち横吹き飛び",
	hit_stand	= { num="しりもち横吹き飛び"	, reverse=0, novec=0 },
	hit_air		= { num="中腹吹き飛び"	, reverse=0, novec=0 },
	hit_crouch	= { num="しりもち横吹き飛び"	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード強"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード強"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード強"	, reverse=0, novec=0 },
})
/*　コピペ用
VectorSample.Tbl.append(
{
	name = "",
	hit_stand	= { num=""	, reverse=0, novec=0 },
	hit_air		= { num=""	, reverse=0, novec=0 },
	hit_crouch	= { num=""	, reverse=0, novec=0 },
	guard_stand	= { num="立ガード強"	, reverse=0, novec=0 },
	guard_air	= { num="空ガード強"	, reverse=0, novec=0 },
	guard_crouch	= { num="屈ガード強"	, reverse=0, novec=0 },
})
*/



// ヒットストップ情報 
/*
HitStopList <-
{
	Light	= { value =  8 },
	Middle	= { value =  9 },
	Heavy	= { value = 10 },
	None		= { value =  1 },
	S_Heavy	= { value = 15 },
	SS_Heavy	= { value = 27 },
	S_Light	= { value =  3 },
}
*/

// name欄があるとHan6で表示される
HitStopList <-
{
	// //ヒットストップ減らした版(結構コンボ入らない)
	// Light = { name = "弱(9)", value = 7 }, 
	// Middle = { name="中(10)", value = 8 },
	// Heavy = { name="強(11)", value = 9 },
	// None = { name="なし(1)", value = 1 },
	// S_Heavy = { name="特大(16)", value = 14 },
	// SS_Heavy = { name="超大(28)", value = 26 },
	// S_Light = { name="超弱(4)", value = 4 },
	
	Light = { name = "弱(9)", value = 9 },
	Middle = { name="中(10)", value = 10 },
	Heavy = { name="強(11)", value = 11 },
	None = { name="なし(1)", value = 1 },
	S_Heavy = { name="特大(16)", value = 16 },
	SS_Heavy = { name="超大(28)", value = 28 },
	S_Light = { name="超弱(4)", value = 4 },

	// 拡張スロット
	EX = 
	[
		//微 -2したやつ
		{ name = "微超弱(2)",  value =  2 },
		{ name = "微弱(7)",  value =  7 },
		{ name = "微中(8)",  value =  8 },
		{ name = "微強(9)",  value =  9 },
	]
}


//-----------------------------------------------------------------------------
// ヒットマークリスト 基本
// 定義がないと基本値が入る
// 単体のものが１つでも足りないとエラーとなって基本値が入る
// （数字）はヒットマークの大きさイメージ
HitMarkList <-
{
	List = 
	[
		{  name = "パンチ 弱（１）", word = "Eff_Hit_PunchA"  },
		{  name = "パンチ 中（２）", word = "Eff_Hit_PunchB", wordex="Eff_Hit_PunchLow"  },
		{  name = "パンチ 強（３）", word = "Eff_Hit_PunchC", wordex="Eff_Hit_Punch"  },
		{  name = "キック 弱（１）", word = "Eff_Hit_KickA"  },
		{  name = "キック 中（２）", word = "Eff_Hit_KickB", wordex="Eff_Hit_KickLow"  },
		{  name = "キック 強（３）", word = "Eff_Hit_KickC", wordex="Eff_Hit_Kick"  },

		{  name = "パンチ 特（４）", word = "Eff_Hit_PunchD", wordex="Eff_Hit_Punch"  },
		{  name = "キック 特（４）", word = "Eff_Hit_KickD", wordex="Eff_Hit_Kick"  },
		
		{  name = "旧斬り", word = "Eff_Hit_SlashOld"  },

		{  name = "燃え", word = "Eff_Hit_Fire"  },
		{  name = "凍結", word = "Eff_Hit_Freeze", wordex="Eff_Hit_FreezeLow" },
		{  name = "電撃", word = "Eff_Hit_Thunder"  },
		{  name = "発光 A", word = "Eff_Hit_FlashA"  },
		{  name = "発光 B", word = "Eff_Hit_FlashB"  },

		{  name = "なし", word = ""  },

		{  name = "発光？", word = "Eff_Hit_Flash"  },

		{  name = "斬り 間引き（２）", word = "Eff_Hit_Slash"  }, //多段ヒット用、持続短くてパーティクルなし
		{  name = "斬り 特（４）", word = "Eff_Hit_SlashD", wordex="Eff_Hit_Slash"  },
		{  name = "斬り 弱（１）", word = "Eff_Hit_SlashA"  },
		{  name = "斬り 中（２）", word = "Eff_Hit_SlashB", wordex="Eff_Hit_SlashLow"  },
		{  name = "斬り 強（３）", word = "Eff_Hit_SlashC", wordex="Eff_Hit_Slash"  },

		{  name = "突き 間引き（２）", word = "Eff_Hit_Thrust"  }, //多段ヒット用、持続短くてパーティクルなし
		{  name = "突き 特（４）", word = "Eff_Hit_ThrustD", wordex="Eff_Hit_Thrust"  },
		{  name = "突き 弱（１）", word = "Eff_Hit_ThrustA"  },
		{  name = "突き 中（２）", word = "Eff_Hit_ThrustB", wordex="Eff_Hit_ThrustLow"  },
		{  name = "突き 強（３）", word = "Eff_Hit_ThrustC", wordex="Eff_Hit_Thrust"  },
		
		{  name = "パンチ 中間引き（２）", word = "Eff_Hit_PunchLow"  }, //多段ヒット用、持続短くてパーティクルなし
		{  name = "キック 中間引き（２）", word = "Eff_Hit_KickLow"  }, //多段ヒット用、持続短くてパーティクルなし
		
		{  name = "パンチ 〆（４）", word = "Eff_Hit_PunchFinish"  }, //とどめ用特　ＳＥ違い
		{  name = "キック 〆（４）", word = "Eff_Hit_KickFinish"  },
		{  name = "斬り 〆（４）", word = "Eff_Hit_SlashFinish"  },
		{  name = "突き 〆（４）", word = "Eff_Hit_ThrustFinish"  },
		
		{  name = "固有1 間引き（２）", word = "Eff_Hit_Chr1Atk"  }, //多段ヒット用、持続短くてパーティクルなし
		{  name = "固有1 特（４）", word = "Eff_Hit_Chr1AtkD", wordex="Eff_Hit_Chr1Atk"  },
		{  name = "固有1 弱（１）", word = "Eff_Hit_Chr1AtkA"  },
		{  name = "固有1 中（２）", word = "Eff_Hit_Chr1AtkB", wordex="Eff_Hit_Chr1AtkLow" },
		{  name = "固有1 強（３）", word = "Eff_Hit_Chr1AtkC", wordex="Eff_Hit_Chr1Atk" },
		
		// 間引きは「強」で、こっちは「中」のＳＥとかが鳴る
		// パンチとキックは元々「中」のＳＥなんだなぁ
		{  name = "斬り 中間引き（２）", word = "Eff_Hit_SlashLow"  }, //多段ヒット用、持続短くてパーティクルなし
		{  name = "突き 中間引き（２）", word = "Eff_Hit_ThrustLow"  }, //多段ヒット用、持続短くてパーティクルなし

		{  name = "パンチ 間引き（２）", word = "Eff_Hit_Punch"  }, //多段ヒット用、持続短くてパーティクルなし
		{  name = "キック 間引き（２）", word = "Eff_Hit_Kick"  }, //多段ヒット用、持続短くてパーティクルなし

		{  name = "固有1 中間引き（２）", word = "Eff_Hit_Chr1AtkLow"  }, //多段ヒット用、持続短くてパーティクルなし
	]

	// 単体
    Guard = {  name = "", word = "Eff_Hit_Guard", wordex="Eff_Hit_GuardLimit" },
	GuardEx = {  name = "", word = "Eff_Hit_GuardEx", wordex="Eff_Hit_GuardExLimit"  },
	CounterHit = {  name = "", word = "Eff_Hit_Counter"  },
}


//VectorList.SetTbl.append()

VectorList <-
{
	// 「021」のような書式は８進数になるので使用不可
	/////////////////////
	Tbl = // ベクトル数値テーブル
	[
		// [   0,  1250,     0,  -75,   0 ], // 頭＆腹弱やられ
		// [   1,  1125,     0,  -70,   0 ], // 頭＆腹中やられ
		// [   2,  1470,     0,  -80,   0 ], // 頭＆腹強やられ
		// [   6,  1300,     0,  -50,   0 ], // 特大 最大25F
		[   0,  1300,     0,  -70,   0 ], // 頭＆腹弱やられ
		[   1,  1400,     0,  -65,   0 ], // 頭＆腹中やられ
		[   2,  1500,     0,  -60,   0 ], // 頭＆腹強やられ
		[   6,  1600,     0,  -60,   0 ], // 特大 最大25F

		[   7,  1100, -3700,    0, 300 ], // ダウン  7 400 -3400 0 200 
		[   8,  1000, -3200,    0, 300 ], // 弱ダウン

		[   9,  7000,     0,    0,   0 ], // 腹吹き飛び
		[  10,   300, -5200,    0, 300 ], // 上吹き飛び  10 0 -5000 0 170 // 上吹き飛び
		[  11,  2200, -4000,  -30, 300 ], // 斜め上吹き飛び  2600 -4000 -35 250 ※放物線に近い
		[  12,  2500, -5000,  -35, 300 ], // きりもみ　150 2400 -3200 -35 200 // きりもみ斜め吹き飛び
		[  13,  3600, -2600,  -70, 300 ], // 横吹き飛び　3200 -2300 -40 250　※放物線に近い
		[  14,  2600, -4000,  -35, 300 ], // きりもみ小吹き飛び
		
		// 叩きつけ
		[  15,    10,  3600,    0, 300 ], // 真下叩きつけ
		[  16,  1500,  3400,    0, 300 ], // 斜め下叩きつけ 2400 2500 -70 250 ※放物線
		[  17,  4000, -1600, -100, 300 ], // 落下腹吹き飛び(低)
		[  19,  6500,  -3500,    0,  300 ], // きりもみ壁吹き飛び
		//019  1600    -3 -100   1 // 超立ちやられ(崩れ落ちダウン)
		[  20,     0,     0,    0,   0 ], // 固め＆のけぞらない＆地上ガードクラッシュ
		
		//この辺にバウンド系の最初の吹き飛びベクトルを入れる
		[  21,  4500, -2800, -100, 300 ], // 早い横吹き飛び
		[  22,    10,  4200,    0, 300 ], // 早い真下叩きつけ
		[  23,  4000,  3800,  -70, 300 ], // 早い斜め下叩きつけ

		[  24,  2000,     0,  -100,   0 ], // 投げ抜けられベクトル	

		// 転倒
		// 025 300 -2000 0 250 // 後ろ転倒
		[  26,   750, -2400,    0, 300 ], // 前転倒＆後ろ転倒
		[  27,   600, -2500,    0, 180 ], // きりもみ転倒　転倒より高いｗ
		[  28,  1500, -3000,  -10, 250 ], // 空中やられ
		
		[  29,  1250, -1600,    0, 200 ], // 低横前転倒＆きりもみ低転倒
	
		[  30,  800, -700,    0, 250 ], // ジャンプ攻撃浮き弱
		[  31,  1200, -800,    0, 250 ], // ジャンプ攻撃浮き中
		[  32,  1500, -900,    0, 250 ], // ジャンプ攻撃浮き強

		//[  30,  700, -2400,    0, 250 ], // ジャンプ攻撃浮き弱
		//[  31,  900, -2600,    0, 250 ], // ジャンプ攻撃浮き中
		//[  32,  1100, -2700,    0, 250 ], // ジャンプ攻撃浮き強
		
		[  35,   300, -4200,    0, 300 ], // 低吹き飛び  10 0 -5000 0 170 // 上吹き飛び
		[  36,  1500,  3800,  -70, 300 ], // 鋭角斜め下叩きつけ
		
		[  38,  2000, -800,    0, 250 ], // ジャンプ攻撃浮き中の横強い
		[  39,  2300, -900,    0, 250 ], // ジャンプ攻撃浮き強の横強い
		
		[  40,  3000, -2800, -100, 300 ], // 軽め？横吹き飛び
		
		
		// 地面跳ね
		[  42,    10, -2100,    0, 300 ], // 真下叩きつけの地面で跳ねる
		[  43,  2800, -1000,  -90, 120 ], // 横浮きとかの地面で跳ねる 2100 -1000 -55 120
		[  44,  1200, -1000,    0, 120 ], // 横浮きとかの地面で跳ねる 2100 -1000 -55 120
		
		// 44
		// 045
		
		[  46,  2400,  -500,  -90,  80 ], // 横浮きとかの地面で滑る

		[  47,    32, -7200,    0, 300 ], // 垂直バウンド上吹き飛び（超浮き）		
//		[  47,    32, -7500,    0, 300 ], // 垂直バウンド上吹き飛び（超浮き）
		[  48,    10, -2800,    0, 300 ], // 真下叩きつけの地面で跳ねる（高く浮く）
		[  49,  1200, -2700,    0, 300 ], // 斜め下叩きつけの地面で跳ねる（高く浮く）
		
		[  54,  2200, -1400,    0, 300 ], // 斜め下浮き
		[  55,  2000, -4500,    0, 300 ], // きりもみ浮き小壁
		[  56,  1700, -4200,    0, 300 ], // きりもみ浮き（上より少し弱め）
     // [  27,   600, -2500,    0, 180 ], // きりもみ転倒　転倒より高いｗ
     // [  12,  2500, -5000,  -35, 300 ], // きりもみ　150 2400 -3200 -35 200 // きりもみ斜め吹き飛び
	 
		[  57,  1100, -4300,    0, 300 ], // 短斜め上吹き飛び
		// [   7,  1100, -3700,    0, 300 ], // ダウン  7 400 -3400 0 200 
		// [  11,  2200, -4000,  -30, 300 ], // 斜め上吹き飛び  2600 -4000 -35 250 ※放物線に近い
	 
		
		// ガード関係
		[  60,  1300,     0,  -70,   0 ], // 弱ガード
		[  61,  1400,     0,  -65,   0 ], // 中ガード
		[  62,  1500,     0,  -60,   0 ], // 強ガード
		[  66,  1600,     0,  -60,   0 ], // 特大ガード
		[  68,  1700,     0,  -60,   0 ], // 超横ベクトル(超ガード)　最大27F,28F
		// [  60,  1400,     0,  -80,   0 ], // 弱ガード
		// [  61,  1600,     0,  -80,   0 ], // 中ガード
		// [  62,  1800,     0,  -80,   0 ], // 強ガード
		// [  66,  2000,     0,  -80,   0 ], // 特大ガード
		// [  68,  2400,     0,  -80,   0 ], // 超横ベクトル(超ガード)　最大27F,28F		
		
		[  85,   820,     0,  -30,   0 ], // 特大のけぞりベクトル(最大27Fのけぞる)
		
		[  87,  10000,     0,    0,   0 ], // 超腹吹き飛び
		[  88,  8000,  -3400,    0,  300 ], // 超きりもみ壁吹き飛び		
		
		[  90,  1000,  -500,    0, 200 ], // 空中ガードベクトル弱
		[  91,  1100, -550,    0, 200 ], // 空中ガードベクトル中
		[  92,  1300, -700,    0, 200 ], // 空中ガードベクトル強
		
		
		
		
		[  93,  1200, -3200,    0, 300 ], // 高く浮き　前転倒＆後ろ転倒
		
		//[  30,  700, -2400,    0, 250 ], // ジャンプ攻撃浮き弱
		[  94,  900, -2300,    0, 250 ], // エリアル浮き
		//[  32,  1100, -2700,    0, 250 ], // ジャンプ攻撃浮き強		
		[  96,  5500, -2000, -100, 300 ], // 浮きの低い早い横吹き飛び
		
		[  98,   300, -2800,    0, 250 ], // 壁貼り付き
		[  99,  1000, -2800,    0, 250 ], // 小壁跳ね返り
		[ 100,  2000, -2800,    0, 250 ], // 壁跳ね返り
		[ 101,  3500, -3200,    0, 250 ], // 大壁跳ね返り
		
		[ 142,  2200, -4400,    0, 250 ], // 再帰きりもみ中浮き小壁
		
		
		[ 180,  3500, -2500,    0, 250 ], // ガード浮きベクトル横
		[ 181,  1700, -2000,    0, 250 ], // ガード浮きベクトル縦
		
		// [  19,  6500,  -3500,    0,  300 ], // きりもみ壁吹き飛び
		[ 189,  6500,  -4100,    0,  300 ], // きりもみ横吹き飛び

		[ 190,   300, -2500,    0, 300 ], // 上吹き飛び  10 0 -5000 0 170 // 上吹き飛び
		[ 191,  2200, -3000,  -30, 300 ], // 斜め上吹き飛び  2600 -4000 -35 250 ※放物線に近い
		[ 192,  2500, -3000,  -35, 300 ], // きりもみ　150 2400 -3200 -35 200 // きりもみ斜め吹き飛び

		[ 194,   750, -2800,    0, 300 ], // 微高前転倒＆後ろ転倒
		[ 195,   600, -2800,    0, 300 ], // きりもみ転倒　転倒より高いｗ


		[ 199, 0,  1000,    0, 300 ], // しりもち垂直叩きつけ
		[ 200, 10000, 15000,    0, 300 ], // しりもち超叩きつけ
		
		//[ 201,  2000,     0,  -70,   0 ], // しりもち buttocks sram
		[ 201,  1500,     0,  -70,   0 ], // しりもち
		
		[ 202,  3500, -1500,  -70, 300 ], // しりもち横吹き飛び
		[ 203,    10, -3000,    0, 250 ], // 真下叩きつけの地面で跳ねる（48より超高く浮く）
		[ 204,    10, -4800,    0, 300 ], // 真下叩きつけの地面で跳ねる（48より超高く浮く）
		[ 205,  2000,     0,  -85,   0 ], // 頭＆腹強　長
		[ 206,  1800,     0,  -90,   0 ], // 頭＆腹中　長
		[ 207,  1300,     0,  -85,   0 ], // 強　短
		[ 208,  1200,     0,  -85,   0 ], // 中　短（やられ＆ガード）
		[ 209,  3200,     0, -150,   0 ], // 頭＆腹　超長
		
		// 新仕様浮きチェック（150-200）正式採用後は若い番号へ？ -------------------------■

		[ 211,  7000,  -4400,    0,  300 ], // 超斜めきりもみ壁吹き飛び		
		[ 213,  4800, -2300,  -70, 250 ], // オリエの地上投げ　超横吹き飛び
		[ 215,    10, 3000,    0,   0 ], // 早い真下叩きつけ 215    10  2000    0 -32 
		[ 216,  1600, -2000,    0, 250 ], // ゴルドー引き寄せ浮き

		[ 218,  1600,  2500,    0, 250 ], // ゴルドー引き寄せ浮き
		[ 219,   100,   550,    0, 250 ], // 真下落下
		//220
		[ 220,    0, -7000,    0, 300 ], // 超垂直吹き飛び
		[ 221,    0, -13000,   0, 300 ], // 超超垂直吹き飛び
		[ 223,  3000, -4000,  0, 300 ], // 長きりもみ吹き飛び
		[ 224,  800, -6300,   0, 300 ], // 斜め上大吹き飛び
		[ 225,  4000, -4000,  0, 300 ], // きりもみ吹き飛び小壁
		[ 226,  750, -1000,    0, 150 ], // リンネ投げ転倒
	
		[ 227,   300,  -200,    0,   0 ], // ハイドＫインス用
		[ 228,  6500, -5000,  -20, 300 ], // 超斜め上吹き飛び
		
		[ 230,  1750,     0,  -60,   0 ], // GC地上ガードベクトル
		[ 231,  500,  0,    0, 200 ], // GC空中ガードベクトル
		[ 232,  3500, -3000,    0, 300 ], // GC吹き飛ばし
		
		[ 235,    0,    0,    0,  0 ], // ウェブやられ固定

		//ふんわり浮かせを追加
		//010   512 -5000    0 250 // 上吹き飛び  10 0 -5000 0 170 // 上吹き飛び
		[ 243,  1750,     0,  -60,   0 ], // VO地上ガードベクトル
		[ 244,  500,  0,    0, 200 ], // VO空中ガードベクトル
		
		[ 245,  -2400,   0,  -140, 0 ], // 引き寄せ腹やられ
		[ 246,  -1500,   0,   100, 0 ], // 引き寄せ腹やられ
		[ 247,    0,    0,    0,  0 ], // 呪縛ダウン固定
		
		// 特殊やられ（仕様かわるまでここにおく）
		//251  1500     0  -75   0 // 投げ返し
		
		[ 254,  1300,     0, -70,   0 ], // 地上ＫＯ 最大25F
//		[   2,  1470,     0,  -80,   0 ], // 頭強
		
		//------------------------------------------------------------------------------■
		//255まで
		//------------------------------------------------------------------------------■ mod content
		[ 33,   800, -4500,    0, 300 ], // tenzanko launch
		[ 102,   50, -2800,    0, 250 ], // akira 623b wallbound
		[ 134,  3500, -4000,  -50, 250 ], // naoto 3c
		[ 135,   300, -3500,    0, 120 ], // naoto 214214
		[ 136,  20000,  -7000,    0,  300 ], // 214214ex kick 1
		[ 137,  20000,  -6000,    0,  450 ], // 214214ex kick 2
		[ 138,  19000,  -3500,    0,  450 ], // 214214ex kick 3
		[ 139,  3000,  -1500,    0,  250 ], // 214214ex kick 4
		[ 143, 4000,  3100,  -70, 0 ], // naoto 236236ex spike bound
		[ 144,    10, 0,    0, 300 ], // naoto lowspike bounce
		[ 210,    700, -3400,    0, 300 ], // raka usage
		[ 229,  1200, -4200,    0, 250 ], // gx hyde rebound from addkick
		[ 233,  3600, 0, -150, 0 ], //hyde cross slash hit
		[ 234,  3000, -6000,  0, 300 ], // bigger launch akira 623b
		[ 236,  1200, -3500, 0, 250 ], // gx hyde 214 addb
		[ 249,  2500, -4300,    0, 250 ], // naoto 236b rebound vector
		
		
		[ 330,    1500, -12000,   0, 300 ],
		[ 331,  1500,  3800,  -70, 300 ],
		
		
		[ 400,  1200, -3500, 0, 250 ], //ic5c hyde ch vec
	],
	/////////////////////

	SetTbl = []// ベクトル構成テーブル
}


//ベクトル構成テーブル
//
/*
この書式にあとで変える
VectorList.SetTbl[nnn] = 
{
}
*/

//const def_VL_GUN_Vertical = 1 
//const def_VL_GUN_Vertical = 1 
//ukemitime == -1 →受身不能
//ukemitime == -2 →前のベクトルを引き継ぎ（なんか受身不能が入るけど）

// 1:垂直
// 2:伏せ
// 3:すべり
// 4:跳ね（前）
// 5:跳ね（中）
// 6:跳ね（後）

//power

//local usevectornum_list = array(256, 0); //使っているvector_numのマーク用


local vectmpl = {}; //ベクトル定義の前

vectmpl.dm <- function( str )
{
	if( def_VL_PrintDebugMessage )
	{
		print("\n" + str);
	}
}

vectmpl.table <- [];
vectmpl.table.resize(1024);

//使っているvector_numのマーク用
//使っていたらカウントアップ
vectmpl.usevectornum <- array(1024, 0); 
vectmpl.usename <- {};


//ベクトル定義に追加する
vectmpl.add <- function( t ) : (vectmpl)
{
	/*
	if( "clone_vector" in t )
	{
		print("\n "+t.clone_vector+"を元にします...\n");
		local tbldata = vectmpl.table[t.clone_vector];
		
		//local ret = {}; //使うテーブルをまず用意する
		//clone元のテーブルを見て同じ構成にする
		
		local ret = KakuhoTable( tbldata );

		
		
		
		//local ctbl = DeepCopy(tbldata);
//		local ctbl = copy_clone(tbldata);
		print("\nOK...");
		delete t.clone_vector; //削除
		
		MergeTable( ctbl, t ); //base, add
		t = ctbl; //差し替える

		DrawTable( ctbl );
		//print("\nt.number:"+t.number);
	}
	*/

	//エラー出力用ベクトル名
	local vecname = "["+t.number+"]"+t.name;
	
	//nameのエラーチェック
	if( t.name in usename )
	{
		dm(format("【警告】%sのnameがダブってます",vecname));
	}
	else
	{
		usename[t.name] <- 1; //
	}
	
	
	//vector_num使っているものをマーク
	foreach( i,v in t.tbl )
	{
		local usevector_num = t.tbl[i].vector_num;
		usevectornum[usevector_num] += 1; //使ってる
	}
	
	
	//ＫＯ時のベクトル修正チェック
	//Mv_Modori_Down以外に飛ぶものはベクトル修正しないと不味い
	if( !("ko_vector" in t) || t.ko_vector==0 )
	{
		if( t.Finalize_Hit != "Mv_Modori_Down" )
		{
			dm(format("【警告】%sのko_vector指定大丈夫か？",vecname));
		}
	}	

	//tblcountのエラーチェック
	local tblcount = t.tbl.len();
	if( !( "tblcount" in t ) )
	{
		dm(format("【連絡】%sのtblcount:%dをセット",vecname,tblcount));		
		t.tblcount <- tblcount; //数は自動で入れてあげよう
	}
	else if( tblcount != t.tblcount )
	{
		dm(format("【警告】%sのtblcountの数があってない",vecname));
	}
	
	//numberのエラーチェック
	if( "name" in vectmpl.table[t.number] )
	{
		dm(format("【警告】%sのnumberがダブってます",vecname));		
	}
	
	//Finalize_Hit
	if( "Finalize_Hit" in t || "Finalize_Guard" in t )
	{
		//Finalize指定があるのでＯＫ
	}
	else
	{
		dm(format("【警告】%sのFinalize指定がありません",vecname));		
	}
	
	//テーブルに追加
	vectmpl.table[t.number] = t;
	
	//print("\nt.number:"+t.number);
	//if( "ukemitime" in t.tbl[0] ) print(" ukemi:"+t.tbl[0].ukemitime);
}


/////////////////////
//vectmpl.add
vectmpl.add({
	number = 0, // 定義番号

	name = "頭やられ弱",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_YarareS",	
	power=def_VL_Pow_LV1, //弱やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）
			vector_num = 0, // 使用ベクトル番号
			hit_pattern = 300,
			vector_time = def_VL_VT_Hit_Std_LV1, // 発生時間
			vector_returntime = def_VL_VT_Hit_Std_LV1, // 壁反射ベクトル影響時間
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_A", // 発生エフェクト名
		},
	]
})
/////////////////////
vectmpl.add({
	number = 1, // 定義番号

	name = "頭やられ中",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない
//	counterhit_vector = 201, //しりもち

	Finalize_Hit = "Mv_Modori_YarareS",			

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）
			vector_num = 1, // 使用ベクトル番号
			hit_pattern = 303,			
			vector_time = def_VL_VT_Hit_Std_LV2, // 発生時間
			vector_returntime = def_VL_VT_Hit_Std_LV2, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_A", // 発生エフェクト名
		},
	]
})
/////////////////////
vectmpl.add({
	number = 2, // 定義番号

	name = "頭やられ強",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない
	counterhit_vector = 201, //しりもち

	Finalize_Hit = "Mv_Modori_YarareS",			
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）
			vector_num = 2, // 使用ベクトル番号
			hit_pattern = 306,
			vector_time = def_VL_VT_Hit_Std_LV3, // 発生時間
			vector_returntime = def_VL_VT_Hit_Std_LV3, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可			
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_B", // 発生エフェクト名
		},
	]
})
/////////////////////
vectmpl.add({
	number = 3, // 定義番号

	name = "腹やられ弱",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_YarareS",
	power=def_VL_Pow_LV1, //弱やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）
			vector_num = 0, // 使用ベクトル番号
			hit_pattern = 301,
			vector_time = def_VL_VT_Hit_Std_LV1, // 発生時間
			vector_returntime = def_VL_VT_Hit_Std_LV1, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_A", // 発生エフェクト名
		},
	]
})


/////////////////////
vectmpl.add({
	number = 4, // 定義番号

	name = "腹やられ中",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない
	counterhit_vector = 201, //しりもち

	Finalize_Hit = "Mv_Modori_YarareS",			

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）
			vector_num = 1, // 使用ベクトル番号
			hit_pattern = 304,
			vector_time = def_VL_VT_Hit_Std_LV2, // 発生時間
			vector_returntime = def_VL_VT_Hit_Std_LV2, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_A", // 発生エフェクト名
		},
	]
})
/////////////////////
vectmpl.add({
	number = 5, // 定義番号

	name = "腹やられ強",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない
	counterhit_vector = 201, //しりもち

	Finalize_Hit = "Mv_Modori_YarareS",			
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）
			vector_num = 2, // 使用ベクトル番号
			hit_pattern = 307,
			vector_time = def_VL_VT_Hit_Std_LV3, // 発生時間
			vector_returntime = def_VL_VT_Hit_Std_LV3, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_B", // 発生エフェクト名
		},
	]
})

/////////////////////
vectmpl.add({
	number = 6, // 定義番号

	name = "真下ダウン",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 26, // 受身不能時間
			vector_num = 15, // 使用ベクトル番号
			hit_pattern = 345,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = 2, // 床受け身番号
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 350,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},
	]
})
/////////////////////
vectmpl.add({
	number = 7, // 定義番号

	name = "追撃ダウン",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 25, // 基本受け身不可時間
			vector_num = 7, // 使用ベクトル番号
			hit_pattern = 320,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = 2, // 床受け身番号
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 350,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},
	]
})

/////////////////////
//弱ダウン
vectmpl.add({
	number = 8, // 定義番号

	name = "ダウン弱",
	prio_vector = 90, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",			
	power=def_VL_Pow_LV1, //弱やられレベル
	
	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 15, // 基本受け身不可時間
			vector_num = 8, // 使用ベクトル番号
			hit_pattern = 320,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = 2, // 床受け身番号
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 350,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},
	]
})

// 吹き飛び
/////////////////////
vectmpl.add({
	number = 9, // 定義番号

	name = "腹吹き飛び",
	prio_vector = 110, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 31, // 基本受け身不可時間
			vector_num = 9, // 使用ベクトル番号
			hit_pattern = 331,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = 3, // 床受け身番号
			
			flags = [ "boundwall", "erasekasanari" ],
			//flag_boundwall = true, // 
			//flag_erasekasanari = true, // 重なり消去
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 350,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},
	]
})
/////////////////////
vectmpl.add({
	number = 10, // 定義番号

	name = "垂直吹き飛び",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	//hitflag_set = 0, // 「当たった時」にセットするフラグ（0-31）

	Finalize_Hit = "Mv_Modori_Down",
	
	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 31, // 基本受け身不可時間
			vector_num = 10, // 使用ベクトル番号
			hit_pattern = 330,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = 1, // 床受け身番号
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 351,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名	
		},
	]
})
/////////////////////
vectmpl.add({
	number = 11, // 定義番号

	name = "斜め上吹き飛び",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 31, // 基本受け身不可時間
			vector_num = 11, // 使用ベクトル番号
			hit_pattern = 320,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = 2, // 床受け身番号
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 350,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名			
		},
	]
})
/////////////////////
vectmpl.add({
	number = 12, // 定義番号

	name = "きりもみ吹き飛び",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 31, // 基本受け身不可時間
			vector_num = 12, // 使用ベクトル番号
			hit_pattern = 333,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = 1, // 床受け身番号
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 350,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},
	]
})
/////////////////////
vectmpl.add({
	number = 13, // 定義番号

	name = "横浮きダウン",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 22, // 基本受け身不可時間
			vector_num = 13, // 使用ベクトル番号
			hit_pattern = 320,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = 2, // 床受け身番号
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 350,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},
	]
})
/////////////////////
vectmpl.add({
	number = 14, // 定義番号

	name = "きりもみ小吹き飛び",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 26, // 基本受け身不可時間
			vector_num = 14, // 使用ベクトル番号
			hit_pattern = 333,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = 2, // 床受け身番号
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 350,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},
	]
})

// 叩きつけ
/////////////////////
vectmpl.add({
	number = 15, // 定義番号

	name = "真下叩きつけ",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 31, // 基本受け身不可時間
			vector_num = 15, // 使用ベクトル番号
			hit_pattern = 346, //332代用
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = 1, // 床受け身番号
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 351,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},
	]
})
/////////////////////
vectmpl.add({
	number = 16, // 定義番号

	name = "斜め下叩きつけ",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 31, // 基本受け身不可時間
			vector_num = 16, // 使用ベクトル番号
			hit_pattern = 324,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = 2, // 床受け身番号
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 350,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},
	]
})
/////////////////////
vectmpl.add({
	number = 17, // 定義番号

	name = "小腹吹き飛び",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	wallbound_vector = 250, //小壁

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 31, // 基本受け身不可時間
			vector_num = 17, // 使用ベクトル番号
			hit_pattern = 331,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = 3, // 床受け身番号

			flag_boundwall = true, // 
			flag_erasekasanari = true, // 重なり消去
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 350,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},
	]
})
/////////////////////
vectmpl.add({
	number = 18, // 定義番号

	name = "中腹吹き飛び",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	wallbound_vector = 250, //小壁

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 31, // 基本受け身不可時間
			vector_num = 21, // 使用ベクトル番号
			hit_pattern = 320,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = 3, // 床受け身番号

			flag_boundwall = true, // 
			flag_erasekasanari = true, // 重なり消去
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 350,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},
	]
})

/////////////////////
vectmpl.add({
	number = 19, // 定義番号

	name = "きりもみ壁吹き飛び",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",
	//wallbound_vector=251, //大壁バウンド

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 31, // 基本受け身不可時間
			vector_num = 19, // 使用ベクトル番号
			hit_pattern = 333,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = 1, // 床受け身番号
			
			flags = [ "boundwall", "erasekasanari" ],
			//flag_boundwall = true, // 
			//flag_erasekasanari = true, // 重なり消去
		},		
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 350,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},
	]
})

// 特殊
/////////////////////
vectmpl.add({
	number = 20, // 定義番号

	name = "のけぞらない",
	prio_vector = 0, // ベクトル優先度
	ko_vector = def_VL_KoVector, // KO時のベクトル修正 0 だと修正しない
	Finalize_Hit = "Mv_Modori_Down", //無いとファイナライズ通った時点でエラー
	power=def_VL_Pow_LV0, //声無しやられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 0,
			guard_pattern = def_VL_GuardPat_Ground,
			vector_time = 0, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
		},
	]
})

/////////////////////
vectmpl.add({
	number = 21, // 定義番号

	name = "きり中浮飛小壁",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	wallbound_vector = 250, //小壁バウンド

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 27, // 基本受け身不可時間
			vector_num = 142, // 使用ベクトル番号
			hit_pattern = 333,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = 2, // 床受け身番号

			flag_boundwall = true, // 
			flag_erasekasanari = true, // 重なり消去
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 350,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},
	]
})

/////////////////////
vectmpl.add({
	number = 22, // 定義番号

	name = "低垂直吹き飛び",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	//hitflag_set = 0, // 「当たった時」にセットするフラグ（0-31）

	Finalize_Hit = "Mv_Modori_Down",
	
	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 25, // 基本受け身不可時間
			vector_num = 35, // 使用ベクトル番号
			hit_pattern = 330,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = 1, // 床受け身番号
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 351,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名	
		},
	]
})

/////////////////////
vectmpl.add({
	number = 23, // 定義番号

	name = "投げ抜け押し返し",
	prio_vector = 100, // ベクトル優先度
	ko_vector = def_VL_KoVector, // KO時のベクトル修正 0 だと修正しない
	
	Finalize_Hit = "Mv_Modori_Nagenuke",
	Finalize_Guard = "Mv_Modori_Nagenuke",	
	power=def_VL_Pow_LV0, //声無しやられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = def_VL_NagenukePat,
			guard_pattern = def_VL_NagenukePat,
			vector_time = 35, // 発生時間　15 + 15 + 硬直
			vector_returntime = 20, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
		},
	]
})
/////////////////////
vectmpl.add({
	//投げ抜け押し返しとセット
	number = 24, // 定義番号

	name = "投げ抜けられやられ",
	prio_vector = 100, // ベクトル優先度
	ko_vector = def_VL_KoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Nagenukerare",
	Finalize_Guard = "Mv_Modori_Nagenukerare",
	power=def_VL_Pow_LV0, //声無しやられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 24, // 使用ベクトル番号
			hit_pattern = def_VL_NagenukerarePat, //抜けられポーズ
			guard_pattern = def_VL_NagenukerarePat,
			vector_time = 27, // 発生時間 19で五分 元22
			vector_returntime = 20, // 壁反射ベクトル時間
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル
		},
	]
})
// 転びセット
/////////////////////
vectmpl.add({
	number = 25, // 定義番号

	name = "後ろ転倒",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 26, // 基本受け身不可時間
			vector_num = 26, // 使用ベクトル番号
			hit_pattern = 320,
			vector_time = -1, // 発生時間
			vector_returntime = 10, // 壁反射ベクトル
			ground_ukemi_num = 1, // 床受け身番号 -1:地上受け身不可
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 350,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -1005, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名				
		},
	]
})
/////////////////////
vectmpl.add({
	number = 26, // 定義番号

	name = "前転倒",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 26, // 基本受け身不可時間
			vector_num = 26, // 使用ベクトル番号
			hit_pattern = 326,
			vector_time = -1, // 発生時間
			vector_returntime = 10, // 壁反射ベクトル
			ground_ukemi_num = 1, // 床受け身番号
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 352,
			
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -1005, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
		},
	]
})
/////////////////////
vectmpl.add({
	number = 27, // 定義番号

	name = "きりもみ転倒",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 26, // 基本受け身不可時間
			vector_num = 27, // 使用ベクトル番号
			hit_pattern = 333,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = 1, // 床受け身番号
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 350,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},
	]
})
/////////////////////
vectmpl.add({
	number = 28, // 定義番号

	name = "空中やられ", // 前やばいオートリカバーだった
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 26, // 基本受け身不可時間
			vector_num = 28, // 使用ベクトル番号
			hit_pattern = 320,
			vector_time = -1, // 発生時間
			vector_returntime = 10, // 壁反射ベクトル
			ground_ukemi_num = 1, // 床受け身番号 -1:地上受け身不可
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 350,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -1005, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名				
		},
	]
})

/////////////////////
vectmpl.add({
	number = 29, // 定義番号

	name = "きりもみ低転倒",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 26, // 基本受け身不可時間
			vector_num = 29, // 使用ベクトル番号
			hit_pattern = 333,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = 1, // 床受け身番号
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 350,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},
	]
})


/////////////////////
vectmpl.add({
	number = 30, // 定義番号

	name = "空攻撃浮き弱",
	prio_vector = 90, // ベクトル優先度
	ko_vector = def_VL_KoVector, // KO時のベクトル修正 0 だと修正しない

	power=def_VL_Pow_LV1, //弱やられレベル

	Finalize_Hit = "Mv_Modori_Down",
	
	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 17, // 基本受け身不可時間
			vector_num = 30, // 使用ベクトル番号
			hit_pattern = 320,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = 1, // 床受け身番号
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 350,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},
	]
})
/////////////////////
vectmpl.add({
	number = 31, // 定義番号

	name = "空攻撃浮き中",
	prio_vector = 90, // ベクトル優先度
	ko_vector = def_VL_KoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",
	
	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 18, // 基本受け身不可時間
			vector_num = 31, // 使用ベクトル番号
			hit_pattern = 320,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = 1, // 床受け身番号
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 350,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},
	]
})


/////////////////////
vectmpl.add({
	number = 32, // 定義番号

	name = "空攻撃浮き強",
	prio_vector = 90, // ベクトル優先度
	ko_vector = def_VL_KoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",

	power=def_VL_Pow_LV3, //強やられレベル
	
	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 19, // 基本受け身不可時間
			vector_num = 32, // 使用ベクトル番号
			hit_pattern = 320,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = 1, // 床受け身番号
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 350,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},
	]
})


// ジャンプ攻撃浮き関係
// この辺使ってないのはほぼ間違いないけど一応残しておく

/////////////////////
vectmpl.add({
	number = 33, // 定義番号

	name = "空攻撃浮き超弱",
	prio_vector = 90, // ベクトル優先度
	ko_vector = def_VL_KoVector, // KO時のベクトル修正 0 だと修正しない
	counterhit_vector = 7, //追撃ダウン
	power=def_VL_Pow_LV1, //弱やられレベル

	Finalize_Hit = "Mv_Modori_Uki",
	
	//エリアルやられ属性の時
	//hitflag_check = def_VL_HitFlag_Aerial, //「当たった時」にチェックするフラグ（0-31）
	//hitflag_vector = 91, // hitflag_check が有効だった場合に移行するベクトルテーブル番号	

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_num = 30, // 使用ベクトル番号
			hit_pattern = 320,
			vector_time = def_VL_VT_Hit_Air_LV0, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可能
			flag_isviewhitbacktime = true, //空中でものけぞり時間ゲージを表示（通常は受け身時間）
			flag_isgroundvector = true, //状態が地上の時にこれがtrueだと地上やられ(着地のしりもち用)
		},
	]
})

/////////////////////
vectmpl.add({
	number = 34, // 定義番号

	name = "空攻撃浮き特大",
	prio_vector = 90, // ベクトル優先度
	ko_vector = def_VL_KoVector, // KO時のベクトル修正 0 だと修正しない
	counterhit_vector = 7, //追撃ダウン

	Finalize_Hit = "Mv_Modori_Uki",
	
	//エリアルやられ属性の時
	//hitflag_check = def_VL_HitFlag_Aerial, //「当たった時」にチェックするフラグ（0-31）
	//hitflag_vector = 91, // hitflag_check が有効だった場合に移行するベクトルテーブル番号	

	reflexhit_vector = 32, //空攻撃浮き強
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_num = 32, // 使用ベクトル番号
			hit_pattern = 320,
			vector_time = def_VL_VT_Hit_Air_LV4, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可能
			flag_isviewhitbacktime = true, //空中でものけぞり時間ゲージを表示（通常は受け身時間）
			flag_isgroundvector = true, //状態が地上の時にこれがtrueだと地上やられ(着地のしりもち用)
		},
	]
})



/////////////////////
vectmpl.add({
	number = 35, // 定義番号

	name = "再帰空攻撃浮き弱",
	prio_vector = 90, // ベクトル優先度
	ko_vector = def_VL_KoVector, // KO時のベクトル修正 0 だと修正しない
	counterhit_vector = 7, //追撃ダウン
	power=def_VL_Pow_LV1, //弱やられレベル

	Finalize_Hit = "Mv_Modori_Uki",

	//エリアルやられ属性の時
	//hitflag_check = def_VL_HitFlag_Aerial, //「当たった時」にチェックするフラグ（0-31）
	//hitflag_vector = 91, // hitflag_check が有効だった場合に移行するベクトルテーブル番号	

	reflexhit_vector = 33, //空攻撃浮き超弱

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_num = 30, // 使用ベクトル番号
			hit_pattern = 320,
			vector_time = def_VL_VT_Hit_Air_RLV1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可能
			flag_isviewhitbacktime = true, //空中でものけぞり時間ゲージを表示（通常は受け身時間）
			flag_isgroundvector = true, //状態が地上の時にこれがtrueだと地上やられ(着地のしりもち用)
		},
	]
})
/////////////////////
vectmpl.add({
	number = 36, // 定義番号

	name = "再帰空攻撃浮き中",
	prio_vector = 90, // ベクトル優先度
	ko_vector = def_VL_KoVector, // KO時のベクトル修正 0 だと修正しない
	counterhit_vector = 7, //追撃ダウン

	Finalize_Hit = "Mv_Modori_Uki",
	
	//エリアルやられ属性の時
	//hitflag_check = def_VL_HitFlag_Aerial, //「当たった時」にチェックするフラグ（0-31）
	//hitflag_vector = 91, // hitflag_check が有効だった場合に移行するベクトルテーブル番号	

	reflexhit_vector = 33, //空攻撃浮き超弱

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_num = 31, // 使用ベクトル番号
			hit_pattern = 320,
			vector_time = def_VL_VT_Hit_Air_RLV2, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可能
			flag_isviewhitbacktime = true, //空中でものけぞり時間ゲージを表示（通常は受け身時間）
			flag_isgroundvector = true, //状態が地上の時にこれがtrueだと地上やられ(着地のしりもち用)
		},
	]
})


/////////////////////
vectmpl.add({
	number = 37, // 定義番号

	name = "再帰空攻撃浮き強",
	prio_vector = 90, // ベクトル優先度
	ko_vector = def_VL_KoVector, // KO時のベクトル修正 0 だと修正しない
	counterhit_vector = 7, //追撃ダウン

	Finalize_Hit = "Mv_Modori_Uki",
	
	//エリアルやられ属性の時
	//hitflag_check = def_VL_HitFlag_Aerial, //「当たった時」にチェックするフラグ（0-31）
	//hitflag_vector = 91, // hitflag_check が有効だった場合に移行するベクトルテーブル番号	
	
	reflexhit_vector = 33, //空攻撃浮き超弱
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_num = 32, // 使用ベクトル番号
			hit_pattern = 320,
			vector_time = def_VL_VT_Hit_Air_RLV3, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可能
			flag_isviewhitbacktime = true, //空中でものけぞり時間ゲージを表示（通常は受け身時間）
			flag_isgroundvector = true, //状態が地上の時にこれがtrueだと地上やられ(着地のしりもち用)
		},
	]
})


// ここから追加
/////////////////////
vectmpl.add({
	number = 38, // 定義番号

	name = "空攻撃横浮き中",
	prio_vector = 90, // ベクトル優先度
	ko_vector = def_VL_KoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",
	
	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 18, // 基本受け身不可時間
			vector_num = 38, // 使用ベクトル番号
			hit_pattern = 320,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = 1, // 床受け身番号
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 350,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},
	]
})


/////////////////////
vectmpl.add({
	number = 39, // 定義番号

	name = "空攻撃横浮き強",
	prio_vector = 90, // ベクトル優先度
	ko_vector = def_VL_KoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",

	power=def_VL_Pow_LV3, //強やられレベル
	
	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 19, // 基本受け身不可時間
			vector_num = 39, // 使用ベクトル番号
			hit_pattern = 320,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = 1, // 床受け身番号
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 350,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},
	]
})


//バウンド系
/////////////////////
vectmpl.add({
	number = 40, // 定義番号

	name = "斜め下バウンド",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV3, //強やられレベル
	
	tblcount = 3, // テーブル数
	tbl = 
	[
		{
			ukemitime = 31, // 基本受け身不可時間
			vector_num = 23, // 使用ベクトル番号
			hit_pattern = 324, //332代用
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = 2, // 床受け身番号
		},
		{
			vector_num = 43, // 使用ベクトル番号
			hit_pattern = 355,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -1010, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = 2, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_SlideDown", // 発生エフェクト名
			flag_noboundmutekiplus = true, // バウンドによる無敵カウントの加算を行わない
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 356,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
		},		
	]
})

//バウンド系
/////////////////////
vectmpl.add({
	number = 41, // 定義番号

	name = "鋭角斜め下バウンド",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV3, //強やられレベル
	
	tblcount = 3, // テーブル数
	tbl = 
	[
		{
			vector_time = -1, // 発生時間

			ukemitime = 31, // 基本受け身不可時間
			vector_num = 36, // 使用ベクトル番号
			hit_pattern = 324, //332代用
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = 2, // 床受け身番号
		},
		{
			vector_num = 44, // 使用ベクトル番号
			hit_pattern = 355,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -1010, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = 2, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_SlideDown", // 発生エフェクト名
			flag_noboundmutekiplus = true, // バウンドによる無敵カウントの加算を行わない
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 356,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},				
	]
})


/////////////////////
vectmpl.add({
	number = 42, // 定義番号

	name = "真下バウンド",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV3, //強やられレベル
	
	counterhit_vector = 371,

	tblcount = 3, // テーブル数
	tbl = 
	[
		{
			ukemitime = 31, // 基本受け身不可時間
			vector_num = 22, // 使用ベクトル番号
			hit_pattern = 346, //332代用
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = 1, // 床受け身番号
		},
		{
			vector_num = 42, // 使用ベクトル番号
			hit_pattern = 353,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -1010, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = 1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_PrecipitateDown", // 発生エフェクト名
			flag_noboundmutekiplus = true, // バウンドによる無敵カウントの加算を行わない
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 354,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
		},			
	]
})

/////////////////////
vectmpl.add({
	number = 43, // 定義番号

	name = "斜め下すべり",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 3, // テーブル数
	tbl = 
	[
		{
			ukemitime = 31, // 基本受け身不可時間
			vector_num = 23, // 使用ベクトル番号
			hit_pattern = 324,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = 2, // 床受け身番号
			//flag_noboundmutekiplus = true, // 激突時の無敵カウントを加算しない
		},
		{
			vector_num = 46, // 使用ベクトル番号
			hit_pattern = 355,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -1010, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = 2, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_SlideDown", // 発生エフェクト名
			flag_noboundmutekiplus = true, // バウンドによる無敵カウントの加算を行わない
		},
		{		
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 356,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
			//flag_noboundmutekiplus = true, // 激突時の無敵カウントを加算しない
		},				
		
	]
})

/////////////////////
vectmpl.add({
	number = 45, // 定義番号

	name = "横浮き短バウンド",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 3, // テーブル数
	tbl = 
	[
		{
			ukemitime = 31, // 基本受け身不可時間
			vector_num = 40, // 使用ベクトル番号
			hit_pattern = 324,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = 3, // 床受け身番号
		},
		{
			vector_num = 44, // 使用ベクトル番号
			hit_pattern = 353,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -1010, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = 2, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_SlideDown", // 発生エフェクト名
			flag_noboundmutekiplus = true, // バウンドによる無敵カウントの加算を行わない
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 354,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},	
	]
})

/////////////////////
vectmpl.add({
	number = 46, // 定義番号

	name = "横浮きバウンド",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 3, // テーブル数
	tbl = 
	[
		{
			ukemitime = 31, // 基本受け身不可時間
			vector_num = 21, // 使用ベクトル番号
			hit_pattern = 324,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = 3, // 床受け身番号
		},
		{
			vector_num = 43, // 使用ベクトル番号
			hit_pattern = 353,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -1010, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = 2, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_SlideDown", // 発生エフェクト名
			flag_noboundmutekiplus = true, // バウンドによる無敵カウントの加算を行わない
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 354,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},	
	]
})
/////////////////////
vectmpl.add({
	number = 47, // 定義番号

	name = "垂直バウンド",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 3, // テーブル数
	tbl = 
	[
		{
			ukemitime = 31, // 基本受け身不可時間
			vector_num = 47, // 使用ベクトル番号
			hit_pattern = 330,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = 1, // 床受け身番号
		},
		{
			vector_num = 42, // 使用ベクトル番号
			hit_pattern = 353,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -1010, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = 1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_PrecipitateDown", // 発生エフェクト名
			flag_noboundmutekiplus = true, // バウンドによる無敵カウントの加算を行わない
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 354,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
		},		
	]
})

//0401追加鉄拳浮き
/////////////////////
vectmpl.add({
	number = 48, // 定義番号

	name = "真下高バウンド",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 3, // テーブル数
	tbl = 
	[
		{
			ukemitime = 31, // 基本受け身不可時間
			vector_num = 22, // 使用ベクトル番号
			hit_pattern = 346, //332代用
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = 1, // 床受け身番号
		},
		{
			vector_num = 48, // 使用ベクトル番号
			hit_pattern = 353,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -1010, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = 1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_PrecipitateDown", // 発生エフェクト名
			flag_noboundmutekiplus = true, // バウンドによる無敵カウントの加算を行わない
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 354,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
		},			
	]
})
/////////////////////
vectmpl.add({
	number = 49, // 定義番号

	name = "斜下高バウンド",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 3, // テーブル数
	tbl = 
	[
		{
			ukemitime = 31, // 基本受け身不可時間
			vector_num = 23, // 使用ベクトル番号
			hit_pattern = 324,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = 3, // 床受け身番号
		},
		{
			vector_num = 49, // 使用ベクトル番号
			hit_pattern = 353,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -1010, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = 3, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_SlideDown", // 発生エフェクト名
			flag_noboundmutekiplus = true, // バウンドによる無敵カウントの加算を行わない
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 354,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},				
		
	]
})


/////////////////////
vectmpl.add({
	number = 50, // 定義番号

	name = "屈やられ弱",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_YarareC",			
	power=def_VL_Pow_LV1, //弱やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 0, // 使用ベクトル番号
			hit_pattern = 302,
			vector_time = def_VL_VT_Hit_Cro_LV1, // 発生時間
			vector_returntime = 16, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_A", // 発生エフェクト名
		},
	]
})
/////////////////////
vectmpl.add({
	number = 51, // 定義番号

	name = "屈やられ中",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない
	counterhit_vector = 201, //しりもち

	Finalize_Hit = "Mv_Modori_YarareC",			

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 1, // 使用ベクトル番号
			hit_pattern = 305,
			vector_time = def_VL_VT_Hit_Cro_LV2, // 発生時間
			vector_returntime = 19, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_A", // 発生エフェクト名
		},
	]
})
/////////////////////
vectmpl.add({
	number = 52, // 定義番号

	name = "屈やられ強",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない
	counterhit_vector = 201, //しりもち

	Finalize_Hit = "Mv_Modori_YarareC",			
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 2, // 使用ベクトル番号
			hit_pattern = 308,
			vector_time = def_VL_VT_Hit_Cro_LV3, // 発生時間
			vector_returntime = 21, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_B", // 発生エフェクト名
		},
	]
})

//さらに浮きベクトル
/////////////////////
vectmpl.add({
	number = 54, // 定義番号

	name = "斜め下浮き",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 25, // 基本受け身不可時間
			vector_num = 54, // 使用ベクトル番号
			hit_pattern = 320,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = 2, // 床受け身番号
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 350,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},
	]
})


/////////////////////
vectmpl.add({
	number = 55, // 定義番号

	name = "きり浮飛小壁",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	wallbound_vector = 250, //小壁バウンド	

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 26, // 基本受け身不可時間
			vector_num = 55, // 使用ベクトル番号
			hit_pattern = 333,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = 2, // 床受け身番号

			flag_boundwall = true, // 
			flag_erasekasanari = true, // 重なり消去
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 350,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},
	]
})

/////////////////////
vectmpl.add({
	number = 56, // 定義番号

	name = "きりもみ浮き",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	// wallbound_vector = 250, //小壁バウンド	

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 26, // 基本受け身不可時間
			vector_num = 56, // 使用ベクトル番号
			hit_pattern = 333,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = 2, // 床受け身番号
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 350,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},
	]
})

/////////////////////
vectmpl.add({
	number = 57, // 定義番号

	name = "短きりもみ吹き飛び",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 31, // 基本受け身不可時間
			vector_num = 57, // 使用ベクトル番号
			hit_pattern = 333,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = 2, // 床受け身番号
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 350,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名			
		},
	]
})

/////////////////////
vectmpl.add({
	number = 58, // 定義番号

	name = "長きりもみ吹き飛び",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 31, // 基本受け身不可時間
			vector_num = 223, // 使用ベクトル番号
			hit_pattern = 333,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = 2, // 床受け身番号
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 350,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名			
		},
	]
})

/////////////////////
vectmpl.add({
	number = 59, // 定義番号

	name = "低きりもみ横吹き飛び",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 31, // 基本受け身不可時間
			vector_num = 13, // 使用ベクトル番号
			hit_pattern = 333,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = 2, // 床受け身番号
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 350,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名			
		},
	]
})


//空攻撃地上やられ
//再帰ありで別ベクトルにします
/////////////////////
vectmpl.add({
	number = 60, // 定義番号

	name = "空攻撃頭やられ弱",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない
	reflexhit_vector = 70, //再帰

	Finalize_Hit = "Mv_Modori_YarareS",			
	power=def_VL_Pow_LV1, //弱やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）
			vector_num = 0, // 使用ベクトル番号
			hit_pattern = 300,
			vector_time = def_VL_VT_Hit_Std_LV1, // 発生時間
			vector_returntime = def_VL_VT_Hit_Std_LV1, // 壁反射ベクトル影響時間
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_A", // 発生エフェクト名
		},
	]
})
/////////////////////
vectmpl.add({
	number = 61, // 定義番号

	name = "空攻撃頭やられ中",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない
	reflexhit_vector = 71, //再帰

	Finalize_Hit = "Mv_Modori_YarareS",			

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）
			vector_num = 1, // 使用ベクトル番号
			hit_pattern = 303,			
			vector_time = def_VL_VT_Hit_Std_LV2, // 発生時間
			vector_returntime = def_VL_VT_Hit_Std_LV2, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_A", // 発生エフェクト名
		},
	]
})
/////////////////////
vectmpl.add({
	number = 62, // 定義番号

	name = "空攻撃頭やられ強",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない
	reflexhit_vector = 72, //再帰

	Finalize_Hit = "Mv_Modori_YarareS",			
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）
			vector_num = 2, // 使用ベクトル番号
			hit_pattern = 306,
			vector_time = def_VL_VT_Hit_Std_LV3, // 発生時間
			vector_returntime = def_VL_VT_Hit_Std_LV3, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可			
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_B", // 発生エフェクト名
		},
	]
})
/////////////////////
vectmpl.add({
	number = 63, // 定義番号

	name = "空攻撃腹やられ弱",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない
	reflexhit_vector = 73, //再帰

	Finalize_Hit = "Mv_Modori_YarareS",
	power=def_VL_Pow_LV1, //弱やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）
			vector_num = 0, // 使用ベクトル番号
			hit_pattern = 301,
			vector_time = def_VL_VT_Hit_Std_LV1, // 発生時間
			vector_returntime = def_VL_VT_Hit_Std_LV1, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_A", // 発生エフェクト名
		},
	]
})


/////////////////////
vectmpl.add({
	number = 64, // 定義番号

	name = "空攻撃腹やられ中",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない
	reflexhit_vector = 74, //再帰

	Finalize_Hit = "Mv_Modori_YarareS",			

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）
			vector_num = 1, // 使用ベクトル番号
			hit_pattern = 304,
			vector_time = def_VL_VT_Hit_Std_LV2, // 発生時間
			vector_returntime = def_VL_VT_Hit_Std_LV2, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_A", // 発生エフェクト名
		},
	]
})
/////////////////////
vectmpl.add({
	number = 65, // 定義番号

	name = "空攻撃腹やられ強",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない
	reflexhit_vector = 75, //再帰

	Finalize_Hit = "Mv_Modori_YarareS",			
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）
			vector_num = 2, // 使用ベクトル番号
			hit_pattern = 307,
			vector_time = def_VL_VT_Hit_Std_LV3, // 発生時間
			vector_returntime = def_VL_VT_Hit_Std_LV3, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_B", // 発生エフェクト名
		},
	]
})

/////////////////////
vectmpl.add({
	number = 66, // 定義番号

	name = "空攻撃屈やられ弱",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない
	reflexhit_vector = 76, //再帰

	Finalize_Hit = "Mv_Modori_YarareC",			
	power=def_VL_Pow_LV1, //弱やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 0, // 使用ベクトル番号
			hit_pattern = 302,
			vector_time = def_VL_VT_Hit_Cro_LV1, // 発生時間
			vector_returntime = 16, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_A", // 発生エフェクト名
		},
	]
})
/////////////////////
vectmpl.add({
	number = 67, // 定義番号

	name = "空攻撃屈やられ中",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない
	reflexhit_vector = 77, //再帰

	Finalize_Hit = "Mv_Modori_YarareC",			

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 1, // 使用ベクトル番号
			hit_pattern = 305,
			vector_time = def_VL_VT_Hit_Cro_LV2, // 発生時間
			vector_returntime = 19, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_A", // 発生エフェクト名
		},
	]
})
/////////////////////
vectmpl.add({
	number = 68, // 定義番号

	name = "空攻撃屈やられ強",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない
	reflexhit_vector = 78, //再帰

	Finalize_Hit = "Mv_Modori_YarareC",			
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 2, // 使用ベクトル番号
			hit_pattern = 308,
			vector_time = def_VL_VT_Hit_Cro_LV3, // 発生時間
			vector_returntime = 21, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_B", // 発生エフェクト名
		},
	]
})


//再帰はここから
/////////////////////
vectmpl.add({
	number = 70, // 定義番号

	name = "再帰空攻撃頭やられ弱",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_YarareS",			
	power=def_VL_Pow_LV1, //弱やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）
			vector_num = 0, // 使用ベクトル番号
			hit_pattern = 300,
			vector_time = def_VL_VT_Hit_Std_RLV1, // 発生時間
			vector_returntime = 15, // 壁反射ベクトル影響時間
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_A", // 発生エフェクト名
		},
	]
})
/////////////////////
vectmpl.add({
	number = 71, // 定義番号

	name = "再帰空攻撃頭やられ中",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない
	counterhit_vector = 201, //しりもち

	Finalize_Hit = "Mv_Modori_YarareS",			

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）
			vector_num = 1, // 使用ベクトル番号
			hit_pattern = 303,			
			vector_time = def_VL_VT_Hit_Std_RLV2, // 発生時間
			vector_returntime = 18, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_A", // 発生エフェクト名
		},
	]
})
/////////////////////
vectmpl.add({
	number = 72, // 定義番号

	name = "再帰空攻撃頭やられ強",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない
	counterhit_vector = 201, //しりもち

	Finalize_Hit = "Mv_Modori_YarareS",			
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）
			vector_num = 2, // 使用ベクトル番号
			hit_pattern = 306,
			vector_time = def_VL_VT_Hit_Std_RLV3, // 発生時間
			vector_returntime = 20, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可			
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_B", // 発生エフェクト名
		},
	]
})
/////////////////////
vectmpl.add({
	number = 73, // 定義番号

	name = "再帰空攻撃腹やられ弱",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_YarareS",
	power=def_VL_Pow_LV1, //弱やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）
			vector_num = 0, // 使用ベクトル番号
			hit_pattern = 301,
			vector_time = def_VL_VT_Hit_Std_RLV1, // 発生時間
			vector_returntime = 15, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_A", // 発生エフェクト名
		},
	]
})


/////////////////////
vectmpl.add({
	number = 74, // 定義番号

	name = "再帰空攻撃腹やられ中",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない
	counterhit_vector = 201, //しりもち

	Finalize_Hit = "Mv_Modori_YarareS",			

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）
			vector_num = 1, // 使用ベクトル番号
			hit_pattern = 304,
			vector_time = def_VL_VT_Hit_Std_RLV2, // 発生時間
			vector_returntime = 18, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_A", // 発生エフェクト名
		},
	]
})
/////////////////////
vectmpl.add({
	number = 75, // 定義番号

	name = "再帰空攻撃腹やられ強",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない
	counterhit_vector = 201, //しりもち

	Finalize_Hit = "Mv_Modori_YarareS",			
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）
			vector_num = 2, // 使用ベクトル番号
			hit_pattern = 307,
			vector_time = def_VL_VT_Hit_Std_RLV3, // 発生時間
			vector_returntime = 20, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_B", // 発生エフェクト名
		},
	]
})

/////////////////////
vectmpl.add({
	number = 76, // 定義番号

	name = "再帰空攻撃屈やられ弱",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_YarareC",			
	power=def_VL_Pow_LV1, //弱やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 0, // 使用ベクトル番号
			hit_pattern = 302,
			vector_time = def_VL_VT_Hit_Cro_RLV1, // 発生時間
			vector_returntime = 16, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_A", // 発生エフェクト名
		},
	]
})
/////////////////////
vectmpl.add({
	number = 77, // 定義番号

	name = "再帰空攻撃屈やられ中",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない
	counterhit_vector = 201, //しりもち

	Finalize_Hit = "Mv_Modori_YarareC",			

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 1, // 使用ベクトル番号
			hit_pattern = 305,
			vector_time = def_VL_VT_Hit_Cro_RLV2, // 発生時間
			vector_returntime = 19, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_A", // 発生エフェクト名
		},
	]
})
/////////////////////
vectmpl.add({
	number = 78, // 定義番号

	name = "再帰空攻撃屈やられ強",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない
	counterhit_vector = 201, //しりもち

	Finalize_Hit = "Mv_Modori_YarareC",			
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 2, // 使用ベクトル番号
			hit_pattern = 308,
			vector_time = def_VL_VT_Hit_Cro_RLV3, // 発生時間
			vector_returntime = 21, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_B", // 発生エフェクト名
		},
	]
})


/////////////////////
vectmpl.add({
	number = 79, // 定義番号

	name = "頭やられ微特",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない
	counterhit_vector = 201, //しりもち

	Finalize_Hit = "Mv_Modori_YarareS",			
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）
			vector_num = 2, // 使用ベクトル番号
			hit_pattern = 306,
			vector_time = def_VL_VT_Hit_Std_LV3p, // 発生時間
			vector_returntime = def_VL_VT_Hit_Std_LV3p, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可			
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_B", // 発生エフェクト名
		},
	]
})
/////////////////////
vectmpl.add({
	number = 80, // 定義番号

	name = "腹やられ微特",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない
	counterhit_vector = 201, //しりもち

	Finalize_Hit = "Mv_Modori_YarareS",			
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）
			vector_num = 2, // 使用ベクトル番号
			hit_pattern = 307,
			vector_time = def_VL_VT_Hit_Std_LV3p, // 発生時間
			vector_returntime = def_VL_VT_Hit_Std_LV3p, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_B", // 発生エフェクト名
		},
	]
})
/////////////////////
vectmpl.add({
	number = 81, // 定義番号

	name = "屈やられ微特",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない
	counterhit_vector = 201, //しりもち

	Finalize_Hit = "Mv_Modori_YarareC",			
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 2, // 使用ベクトル番号
			hit_pattern = 308,
			vector_time = def_VL_VT_Hit_Cro_LV3p, // 発生時間
			vector_returntime = def_VL_VT_Hit_Cro_LV3p, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_B", // 発生エフェクト名
		},
	]
})




/////////////////////
vectmpl.add({
	number = 82, // 定義番号

	name = "頭やられ短強",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない
	counterhit_vector = 201, //しりもち

	Finalize_Hit = "Mv_Modori_YarareS",			
	power=def_VL_Pow_LV3, //強やられレベル	

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）
			vector_num = 207, // 使用ベクトル番号
			hit_pattern = 306,
			vector_time = def_VL_VT_Hit_Std_LV3, // 発生時間
			vector_returntime = def_VL_VT_Hit_Std_LV3, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可			
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_B", // 発生エフェクト名
		},
	]
})
/////////////////////
vectmpl.add({
	number = 83, // 定義番号

	name = "腹やられ短強",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない
//	counterhit_vector = 201, //しりもち

	Finalize_Hit = "Mv_Modori_YarareS",			
	power=def_VL_Pow_LV3, //強やられレベル	

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）
			vector_num = 207, // 使用ベクトル番号
			hit_pattern = 307,
			vector_time = def_VL_VT_Hit_Std_LV3, // 発生時間
			vector_returntime = def_VL_VT_Hit_Std_LV3, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_B", // 発生エフェクト名
		},
	]
})

/////////////////////
vectmpl.add({
	number = 84, // 定義番号

	name = "屈やられ短強",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない
//	counterhit_vector = 201, //しりもち

	Finalize_Hit = "Mv_Modori_YarareC",			
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 207, // 使用ベクトル番号
			hit_pattern = 308,
			vector_time = def_VL_VT_Hit_Cro_LV3, // 発生時間
			vector_returntime = 21, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_B", // 発生エフェクト名
		},
	]
})


/////////////////////
vectmpl.add({
	number = 85, // 定義番号

	name = "特大のけぞり頭",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない
	
	counterhit_vector = 201,

	Finalize_Hit = "Mv_Modori_YarareS",			
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 85, // 使用ベクトル番号
			hit_pattern = 306,
			vector_time = def_VL_VT_Hit_Std_LV4, // 発生時間
			vector_returntime = def_VL_VT_Hit_Std_LV4, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Ground_B", // 発生エフェクト名
			flag_isgroundvector = true, // 地上のけぞりベクトル			
		},
	]
})
/////////////////////
vectmpl.add({
	number = 86, // 定義番号

	name = "特大のけぞり腹",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_YarareS",			
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 85, // 使用ベクトル番号
			hit_pattern = 307,
			vector_time = def_VL_VT_Hit_Std_LV4, // 発生時間
			vector_returntime = 25, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Ground_B", // 発生エフェクト名					
			flag_isgroundvector = true, // 地上のけぞりベクトル			
		},
	]
})
/////////////////////
vectmpl.add({
	number = 87, // 定義番号

	name = "特大のけぞり屈",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_YarareC",			
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 85, // 使用ベクトル番号
			hit_pattern = 308,
			vector_time = 27, // 発生時間
			vector_returntime = 25, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Ground_B", // 発生エフェクト名
			flag_isgroundvector = true, // 地上のけぞりベクトル			
		},
	]
})

/////////////////////
vectmpl.add({
	number = 90, // 定義番号

	name = "弱エリアルやられ",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			vector_time = -1, // 発生時間

			ukemitime = 21, // 基本受け身不可時間
			vector_num = 94, // 使用ベクトル番号
			hit_pattern = 320,
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = 2, // 床受け身番号
		},
		{
			vector_time = -1, // 発生時間

			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 350,
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},
	]
})


/////////////////////
vectmpl.add({
	number = 91, // 定義番号

	name = "中エリアルやられ",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			vector_time = -1, // 発生時間

			ukemitime = 24, // 基本受け身不可時間
			vector_num = 94, // 使用ベクトル番号
			hit_pattern = 320,
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = 2, // 床受け身番号
		},
		{
			vector_time = -1, // 発生時間

			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 350,
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},
	]
})

/////////////////////
vectmpl.add({
	number = 92, // 定義番号

	name = "強エリアルやられ",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			vector_time = -1, // 発生時間

			ukemitime = 27, // 基本受け身不可時間
			vector_num = 94, // 使用ベクトル番号
			hit_pattern = 320,
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = 2, // 床受け身番号
		},
		{
			vector_time = -1, // 発生時間

			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 350,
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},
	]
})

/////////////////////
vectmpl.add({
	number = 93, // 定義番号

	name = "高浮き前転倒",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			vector_time = -1, // 発生時間

			ukemitime = 26, // 基本受け身不可時間
			vector_num = 93, // 使用ベクトル番号
			hit_pattern = 326,
			vector_returntime = 10, // 壁反射ベクトル
			ground_ukemi_num = 1, // 床受け身番号
		},
		{
			vector_time = -1, // 発生時間

			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 352,
			
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -1005, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
		},
	]
})

/////////////////////
vectmpl.add({
	number = 94, // 定義番号

	name = "超腹吹き飛び大壁バウンド",
	prio_vector = 110, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",
	wallbound_vector=251, //大壁バウンド	

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 31, // 基本受け身不可時間
			vector_num = 87, // 使用ベクトル番号
			hit_pattern = 331,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = 3, // 床受け身番号
			
			flags = [ "boundwall", "erasekasanari" ],
			//flag_boundwall = true, // 
			//flag_erasekasanari = true, // 重なり消去
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 350,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},
	]
})

/////////////////////
vectmpl.add({
	number = 95, // 定義番号

	name = "超きりもみ大壁バウンド",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",
	wallbound_vector=251, //大壁バウンド

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 31, // 基本受け身不可時間
			vector_num = 88, // 使用ベクトル番号
			hit_pattern = 333,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = 1, // 床受け身番号
			
			flags = [ "boundwall", "erasekasanari" ],
			//flag_boundwall = true, // 
			//flag_erasekasanari = true, // 重なり消去
		},		
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 350,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},
	]
})

/////////////////////
vectmpl.add({
	number = 96, // 定義番号

	name = "横吹きバウンド",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 3, // テーブル数
	tbl = 
	[
		{
			ukemitime = 31, // 基本受け身不可時間
			vector_num = 96, // 使用ベクトル番号
			hit_pattern = 320,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = 3, // 床受け身番号
		},
		{
			vector_num = 43, // 使用ベクトル番号
			hit_pattern = 353,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -1010, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = 2, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
			flag_noboundmutekiplus = true, // バウンドによる無敵カウントの加算を行わない
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 354,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},	
	]
})
/////////////////////
vectmpl.add({
	number = 98, // 定義番号

	name = "斜め下叩きつけCHダウン",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	counterhit_vector = 234, //斜め下叩きつけダウン
	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 31, // 基本受け身不可時間
			vector_num = 16, // 使用ベクトル番号
			hit_pattern = 324,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = 2, // 床受け身番号
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 350,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},
	]
})
/////////////////////
vectmpl.add({
	number = def_VL_KoVector, // 定義番号

	name = "KOダウン",
	prio_vector = 200, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 3, // テーブル数
	tbl = 
	[
		{
			vector_num = 7, // 使用ベクトル番号
			hit_pattern = 320,
			vector_time = -1, // 発生時間
			vector_returntime = 10, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = 1, // 床受け身番号
		},
		{
			vector_num = 44, // 使用ベクトル番号
			hit_pattern = 353,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = 1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
			flag_noboundmutekiplus = true, // バウンドによる無敵カウントの加算を行わない
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 354,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},	
	]
})


/////////////////////
vectmpl.add({
	number = 100, // 定義番号

	name = "しりもちCH尻特",
	ukemitime = 0, // 基本受け身不可時間
	prio_vector = 30, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない
	counterhit_vector = 205, //しりもち特

	Finalize_Hit = "Mv_Modori_YarareC", //レバガチャチェックへ
	
	reflexhit_vector = 25, // 後ろ転倒
	
	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 201, // 使用ベクトル番号
			hit_pattern = 312,
			vector_time = 31, // 発生時間
			vector_returntime = 10, // 壁反射ベクトル			
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル
		},
	]
})
/////////////////////
vectmpl.add({
	number = 101, // 定義番号

	name = "頭やられ中CH尻",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない
	counterhit_vector = 201, //しりもち

	Finalize_Hit = "Mv_Modori_YarareS",			

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 1, // 使用ベクトル番号
			hit_pattern = 303,			
			vector_time = def_VL_VT_Hit_Std_LV2, // 発生時間
			vector_returntime = def_VL_VT_Hit_Std_LV2, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_A", // 発生エフェクト名
		},
	]
})
/////////////////////
vectmpl.add({
	number = 102, // 定義番号

	name = "頭やられ強CH尻",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない
	counterhit_vector = 201, //しりもち

	Finalize_Hit = "Mv_Modori_YarareS",			
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 2, // 使用ベクトル番号
			hit_pattern = 306,
			vector_time = def_VL_VT_Hit_Std_LV3, // 発生時間
			vector_returntime = def_VL_VT_Hit_Std_LV3, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_B", // 発生エフェクト名
		},
	]
})

/////////////////////
vectmpl.add({
	number = 103, // 定義番号

	name = "頭やられ強CH尻(=屈)",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない
	counterhit_vector = 201, //しりもち

	Finalize_Hit = "Mv_Modori_YarareS",			
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 2, // 使用ベクトル番号
			hit_pattern = 306,
			vector_time = def_VL_VT_Hit_Cro_LV3, // 発生時間
			vector_returntime = def_VL_VT_Hit_Cro_LV3, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_B", // 発生エフェクト名
		},
	]
})

/////////////////////
vectmpl.add({
	number = 104, // 定義番号

	name = "腹やられ中CH尻",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない
	counterhit_vector = 201, //しりもち

	Finalize_Hit = "Mv_Modori_YarareS",			

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 1, // 使用ベクトル番号
			hit_pattern = 304,
			vector_time = def_VL_VT_Hit_Std_LV2, // 発生時間
			vector_returntime = def_VL_VT_Hit_Std_LV2, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_A", // 発生エフェクト名
		},
	]
})
/////////////////////
vectmpl.add({
	number = 105, // 定義番号

	name = "腹やられ強CH尻",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない
	counterhit_vector = 201, //しりもち

	Finalize_Hit = "Mv_Modori_YarareS",			
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 2, // 使用ベクトル番号
			hit_pattern = 307,
			vector_time = def_VL_VT_Hit_Std_LV3, // 発生時間
			vector_returntime = def_VL_VT_Hit_Std_LV3, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_B", // 発生エフェクト名
		},
	]
})

/////////////////////
vectmpl.add({
	number = 107, // 定義番号

	name = "屈やられ中CH尻",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない
	counterhit_vector = 201, //しりもち

	Finalize_Hit = "Mv_Modori_YarareC",			

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 1, // 使用ベクトル番号
			hit_pattern = 305,
			vector_time = def_VL_VT_Hit_Cro_LV2, // 発生時間
			vector_returntime = 19, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_A", // 発生エフェクト名
		},
	]
})
/////////////////////
vectmpl.add({
	number = 108, // 定義番号

	name = "屈やられ強CH尻",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない
	counterhit_vector = 201, //しりもち

	Finalize_Hit = "Mv_Modori_YarareC",			
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 2, // 使用ベクトル番号
			hit_pattern = 308,
			vector_time = def_VL_VT_Hit_Cro_LV3, // 発生時間
			vector_returntime = 21, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_B", // 発生エフェクト名
		},
	]
})


/////////////////////
vectmpl.add({
	number = 110, // 定義番号

	name = "頭やられ中CH真バ",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない
	counterhit_vector = 42, //真下バウンド

	Finalize_Hit = "Mv_Modori_YarareS",			

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）
			vector_num = 1, // 使用ベクトル番号
			hit_pattern = 303,			
			vector_time = def_VL_VT_Hit_Std_LV2, // 発生時間
			vector_returntime = def_VL_VT_Hit_Std_LV2, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_A", // 発生エフェクト名
		},
	]
})

/////////////////////
vectmpl.add({
	number = 112, // 定義番号

	name = "屈やられ中CH真バ",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない
	counterhit_vector = 42, //真下バウンド

	Finalize_Hit = "Mv_Modori_YarareC",			

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 1, // 使用ベクトル番号
			hit_pattern = 305,
			vector_time = def_VL_VT_Hit_Cro_LV2, // 発生時間
			vector_returntime = 19, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_A", // 発生エフェクト名
		},
	]
})

//

/////////////////////
vectmpl.add({
	number = 114, // 定義番号

	name = "頭やられ短中",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない
//	counterhit_vector = 201, //しりもち

	Finalize_Hit = "Mv_Modori_YarareS",			

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）
			vector_num = 208, // 使用ベクトル番号
			hit_pattern = 303,			
			vector_time = def_VL_VT_Hit_Std_LV2, // 発生時間
			vector_returntime = def_VL_VT_Hit_Std_LV2, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_A", // 発生エフェクト名
		},
	]
})

/////////////////////
vectmpl.add({
	number = 115, // 定義番号

	name = "腹やられ短中",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない
//	counterhit_vector = 201, //しりもち

	Finalize_Hit = "Mv_Modori_YarareS",			

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）
			vector_num = 208, // 使用ベクトル番号
			hit_pattern = 304,
			vector_time = def_VL_VT_Hit_Std_LV2, // 発生時間
			vector_returntime = def_VL_VT_Hit_Std_LV2, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_A", // 発生エフェクト名
		},
	]
})

/////////////////////
vectmpl.add({
	number = 116, // 定義番号

	name = "屈やられ短中",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない
//	counterhit_vector = 201, //しりもち

	Finalize_Hit = "Mv_Modori_YarareC",			

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 208, // 使用ベクトル番号
			hit_pattern = 305,
			vector_time = def_VL_VT_Hit_Cro_LV2, // 発生時間
			vector_returntime = 19, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_A", // 発生エフェクト名
		},
	]
})

//
vectmpl.add({
	number = 118, // 定義番号 ※ロンドレキアで番号指定してチェックしてるので変えないこと

	name = "固定落下",
	prio_vector = 5, // ベクトル優先度　優先度は低くして、別の攻撃が当たったら固定解除する
	reflexhit_vector = 32, // 再起ヒットベクトル修正（-1 or ツールでチェック無し だと修正しない）
	ko_vector = def_VL_KoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 4, // テーブル数
	tbl = 
	[
		{
			ukemitime = -1, // 基本受け身不可時間
			vector_num = 199, // 使用ベクトル番号
			hit_pattern = 330, //
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			// flag_isgroundvector = true, // 地上のけぞりベクトル
			flag_noboundmutekiplus = true, // バウンドによる無敵カウントの加算を行わない
		},
		{
			vector_time = 61, // 発生時間

			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			ukemitime = 52, // 基本受け身不可時間
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 327,
			vector_returntime = 10, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Ground_B", // 発生エフェクト名
			// flag_isgroundvector = true, // 地上のけぞりベクトル	地上だと補正切りとかできそうなので無し
		},
		{
			vector_time = 4, // 発生時間

			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 328,
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_noboundmutekiplus = true, // 激突時の無敵カウントを加算しない
		},		
		{
			// vector_time = -1, // 発生時間
			vector_time = 1, // 発生時間

			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 352,
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
		},
	]
})
	
vectmpl.add({
	number = 119, // 定義番号
	name = "固定浮き微弱",
	prio_vector = 90, // ベクトル優先度
	reflexhit_vector = 32, // 再起ヒットベクトル修正（-1 or ツールでチェック無し だと修正しない）
	ko_vector = def_VL_KoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",
	
	tblcount = 3, // テーブル数
	tbl = 
	[
		{
			vector_time = 27, // 発生時間・終了すると次へ
			
			ukemitime = 51, // 基本受け身不可時間
			vector_num = 247, // 使用ベクトル番号
			hit_pattern = 320,
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = 2, // 床受け身番号
		},
		{
			vector_time = -1, // 発生時間・最後まで

			ukemitime = 24, // 基本受け身不可時間
			vector_num = 7, // 使用ベクトル番号
			hit_pattern = 320,
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = 2, // 床受け身番号
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 350,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},		
	]
})

vectmpl.add({
	number = 120, // 定義番号
	name = "固定浮き弱",
	prio_vector = 90, // ベクトル優先度
	reflexhit_vector = 32, // 再起ヒットベクトル修正（-1 or ツールでチェック無し だと修正しない）
	ko_vector = def_VL_KoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",
	
	tblcount = 3, // テーブル数
	tbl = 
	[
		{
			vector_time = 37, // 発生時間・終了すると次へ
			
			ukemitime = 61, // 基本受け身不可時間
			vector_num = 247, // 使用ベクトル番号
			hit_pattern = 320,
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = 2, // 床受け身番号
		},
		{
			vector_time = -1, // 発生時間・最後まで

			ukemitime = 24, // 基本受け身不可時間
			vector_num = 7, // 使用ベクトル番号
			hit_pattern = 320,
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = 2, // 床受け身番号
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 350,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},		
	]
})

vectmpl.add({
	number = 121, // 定義番号
	name = "固定浮き中",
	prio_vector = 90, // ベクトル優先度
	reflexhit_vector = 32, // 再起ヒットベクトル修正（-1 or ツールでチェック無し だと修正しない）
	ko_vector = def_VL_KoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",
	
	tblcount = 3, // テーブル数
	tbl = 
	[
		{
			vector_time = 47, // 発生時間・終了すると次へ
			
			ukemitime = 71, // 基本受け身不可時間
			vector_num = 247, // 使用ベクトル番号
			hit_pattern = 320,
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = 2, // 床受け身番号
		},
		{
			vector_time = -1, // 発生時間・最後まで

			ukemitime = 24, // 基本受け身不可時間
			vector_num = 7, // 使用ベクトル番号
			hit_pattern = 320,
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = 2, // 床受け身番号
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 350,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},		
	]
})

vectmpl.add({
	number = 122, // 定義番号
	name = "固定浮き強",
	prio_vector = 90, // ベクトル優先度
	reflexhit_vector = 32, // 再起ヒットベクトル修正（-1 or ツールでチェック無し だと修正しない）
	ko_vector = def_VL_KoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",
	
	tblcount = 3, // テーブル数
	tbl = 
	[
		{
			vector_time = 57, // 発生時間・終了すると次へ
			
			ukemitime = 81, // 基本受け身不可時間 vec+24
			vector_num = 247, // 使用ベクトル番号
			hit_pattern = 320,
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = 2, // 床受け身番号
		},
		{
			vector_time = -1, // 発生時間・最後まで

			ukemitime = 24, // 基本受け身不可時間
			vector_num = 7, // 使用ベクトル番号
			hit_pattern = 320,
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = 2, // 床受け身番号
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 350,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},		
	]
})



/////////////////////
vectmpl.add({
	number = 125, // 定義番号

	name = "固定崩れ弱",
	prio_vector = 0, // ベクトル優先度
	reflexhit_vector = 32, // 再起ヒットベクトル修正（-1 or ツールでチェック無し だと修正しない）
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 3, // テーブル数
	tbl = 
	[
		{
			vector_time = 31, // 発生時間

			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			ukemitime = 42, // 基本受け身不可時間
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 327,
			vector_returntime = 10, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Ground_B", // 発生エフェクト名
			flag_isgroundvector = true, // 地上のけぞりベクトル			
		},
		{
			vector_time = 4, // 発生時間

			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 328,
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_noboundmutekiplus = true, // 激突時の無敵カウントを加算しない
		},		
		{
			vector_time = -1, // 発生時間

			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 352,
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
		},
	]
})

/////////////////////
vectmpl.add({
	number = 126, // 定義番号

	name = "固定崩れ中",
	prio_vector = 0, // ベクトル優先度
	reflexhit_vector = 32, // 再起ヒットベクトル修正（-1 or ツールでチェック無し だと修正しない）
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 3, // テーブル数
	tbl = 
	[
		{
			vector_time = 41, // 発生時間

			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			ukemitime = 52, // 基本受け身不可時間
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 327,
			vector_returntime = 10, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Ground_B", // 発生エフェクト名
			flag_isgroundvector = true, // 地上のけぞりベクトル			
		},
		{
			vector_time = 4, // 発生時間

			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 328,
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_noboundmutekiplus = true, // 激突時の無敵カウントを加算しない
		},		
		{
			vector_time = -1, // 発生時間

			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 352,
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
		},
	]
})

/////////////////////
vectmpl.add({
	number = 127, // 定義番号

	name = "固定崩れ強",
	prio_vector = 0, // ベクトル優先度
	reflexhit_vector = 32, // 再起ヒットベクトル修正（-1 or ツールでチェック無し だと修正しない）
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 3, // テーブル数
	tbl = 
	[
		{
			vector_time = 51, // 発生時間

			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			ukemitime = 62, // 基本受け身不可時間
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 327,
			vector_returntime = 10, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Ground_B", // 発生エフェクト名
			flag_isgroundvector = true, // 地上のけぞりベクトル			
		},
		{
			vector_time = 4, // 発生時間

			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 328,
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_noboundmutekiplus = true, // 激突時の無敵カウントを加算しない
		},		
		{
			vector_time = -1, // 発生時間

			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 352,
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
		},
	]
})

/////////////////////
vectmpl.add({
	number = 128, // 定義番号

	name = "固定崩れ特大",
	prio_vector = 0, // ベクトル優先度
	reflexhit_vector = 32, // 再起ヒットベクトル修正（-1 or ツールでチェック無し だと修正しない）
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 3, // テーブル数
	tbl = 
	[
		{
			vector_time = 61, // 発生時間

			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			ukemitime = 72, // 基本受け身不可時間
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 327,
			vector_returntime = 10, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Ground_B", // 発生エフェクト名
			flag_isgroundvector = true, // 地上のけぞりベクトル			
		},
		{
			vector_time = 4, // 発生時間

			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 328,
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_noboundmutekiplus = true, // 激突時の無敵カウントを加算しない
		},		
		{
			vector_time = -1, // 発生時間

			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 352,
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
		},
	]
})

/////////////////////
vectmpl.add({
	number = 129, // 定義番号

	name = "固定崩れ超大",
	prio_vector = 0, // ベクトル優先度
	reflexhit_vector = 32, // 再起ヒットベクトル修正（-1 or ツールでチェック無し だと修正しない）
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 3, // テーブル数
	tbl = 
	[
		{
			vector_time = 71, // 発生時間

			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			ukemitime = 82, // 基本受け身不可時間
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 327,
			vector_returntime = 10, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Ground_B", // 発生エフェクト名
			flag_isgroundvector = true, // 地上のけぞりベクトル			
		},
		{
			vector_time = 4, // 発生時間

			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 328,
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_noboundmutekiplus = true, // 激突時の無敵カウントを加算しない
		},		
		{
			vector_time = -1, // 発生時間

			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 352,
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
		},
	]
})

//


/////////////////////
//再帰ベクトル使用前提のもの
//受け身不能時間が長いとかで普通に使うとエイパにしかならんよ
//+120？



vectmpl.add({
	number = 130, // 定義番号

	name = "再帰垂直吹き飛び",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	reflexhit_vector = 10, //再帰ヒット時は通常ベクトル

	Finalize_Hit = "Mv_Modori_Down",
	
	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			vector_time = -1, // 発生時間
			ukemitime = 46, // 基本受け身不可時間　30+10

			vector_num = 10, // 使用ベクトル番号
			hit_pattern = 330,
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = 1, // 床受け身番号
		},
		{
			vector_time = -1, // 発生時間
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算

			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 351,
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名	
		},
	]
})
/////////////////////
vectmpl.add({
	number = 131, // 定義番号

	name = "再帰斜め上吹き飛び",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	reflexhit_vector = 11, //再帰ヒット時は通常ベクトル

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			vector_time = -1, // 発生時間
			ukemitime = 46, // 基本受け身不可時間 30+10

			vector_num = 11, // 使用ベクトル番号
			hit_pattern = 320,
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = 2, // 床受け身番号
		},
		{
			vector_time = -1, // 発生時間
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算

			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 350,
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名			
		},
	]
})
/////////////////////
vectmpl.add({
	number = 132, // 定義番号

	name = "再帰きりもみ吹き飛び",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 12, // KO時のベクトル修正 0 だと修正しない
	reflexhit_vector = 12, //再帰ヒット時は通常ベクトル

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			vector_time = -1, // 発生時間
			ukemitime = 46, // 基本受け身不可時間 30+10

			vector_num = 12, // 使用ベクトル番号
			hit_pattern = 333,
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = 1, // 床受け身番号
		},
		{
			vector_time = -1, // 発生時間
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算

			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 350,
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},
	]
})


/////////////////////
vectmpl.add({
	number = 133, // 定義番号

	name = "再帰きりもみ垂直吹き飛び",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 210, // KO時のベクトル修正 0 だと修正しない
	reflexhit_vector = 210, // 再起ヒットベクトル修正（-1 or ツールでチェック無し だと修正しない）

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			vector_time = -1, // 発生時間
			ukemitime = 41, // 基本受け身不可時間 25+15

			vector_num = 10, // 使用ベクトル番号
			hit_pattern = 334,
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = 1, // 床受け身番号
		},
		{
			vector_time = -1, // 発生時間
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算

			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 351,
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},
	]
})


/////////////////////
vectmpl.add({
	number = 137, // 定義番号

	name = "再帰きりもみ転倒",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 27, // KO時のベクトル修正 0 だと修正しない
	reflexhit_vector = 27, //再帰ヒット時は通常ベクトル
		
	hitflag_set = 20, // 「当たった時」にセットするフラグ（0-31）
	hitflag_check = 20, // 「当たった時」にチェックするフラグ（0-31）
	hitflag_vector = 142, // hitflag_check が有効だった場合に移行するベクトルテーブル番号

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			vector_time = -1, // 発生時間
			ukemitime = 41, // 基本受け身不可時間 25+15

			vector_num = 27, // 使用ベクトル番号
			hit_pattern = 333,
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = 1, // 床受け身番号
		},
		{
			vector_time = -1, // 発生時間
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算

			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 350,
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},
	]
})

/////////////////////
vectmpl.add({
	number = 139, // 定義番号

	name = "再帰きりもみ低転倒",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 29, // KO時のベクトル修正 0 だと修正しない
	reflexhit_vector = 29, //再帰ヒット時は通常ベクトル

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			vector_time = -1, // 発生時間
			ukemitime = 41, // 基本受け身不可時間 25+15

			vector_num = 29, // 使用ベクトル番号
			hit_pattern = 333,
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = 1, // 床受け身番号
		},
		{
			vector_time = -1, // 発生時間
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算

			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 350,
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},
	]
})

/////////////////////
vectmpl.add({
	number = 142, // 定義番号

	name = "再帰きり中浮飛小壁",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	wallbound_vector = 250, //小壁バウンド
	reflexhit_vector = 21, //再帰ヒット時は通常ベクトル

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 41, // 基本受け身不可時間
			vector_num = 142, // 使用ベクトル番号
			hit_pattern = 333,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = 2, // 床受け身番号

			flag_boundwall = true, // 
			flag_erasekasanari = true, // 重なり消去
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 350,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},
	]
})

/////////////////////
vectmpl.add({
	number = 146, // 定義番号

	name = "再帰前転倒", //26
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	reflexhit_vector = 26, //再帰ヒット時は通常ベクトル
	
	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			vector_time = -1, // 発生時間

			ukemitime = 41, // 基本受け身不可時間 25+15
			vector_num = 26, // 使用ベクトル番号
			hit_pattern = 326,
			vector_returntime = 10, // 壁反射ベクトル
			ground_ukemi_num = 1, // 床受け身番号
		},
		{
			vector_time = -1, // 発生時間

			ukemitime = -1005, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 352,
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
		},
	]
})

/////////////////////
vectmpl.add({
	number = 147, // 定義番号

	name = "再帰超超垂直吹き飛び",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	reflexhit_vector = 221, //再帰ヒット時は通常ベクトル

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 46, // 基本受け身不可時間 30+10
			vector_num = 221, // 使用ベクトル番号
			hit_pattern = 330,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = 2, // 床受け身番号
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 351,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名	
		},		
	]
})

/////////////////////
vectmpl.add({
	number = 148, // 定義番号

	name = "再帰超斜め上吹き飛び", // 
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	reflexhit_vector = 228, //再帰ヒット時は通常ベクトル

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			vector_time = -1, // 発生時間

			ukemitime = 46, // 基本受け身不可時間 30+10

			vector_num = 228, // 使用ベクトル番号
			hit_pattern = 331,
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = 2, // 床受け身番号

			flag_boundwall = true, // 
			flag_erasekasanari = true, // 重なり消去
		},
		{
			vector_time = -1, // 発生時間

			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算

			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 350,
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},
	]
})

/////////////////////
vectmpl.add({
	number = 149, // 定義番号

	name = "再帰きりもみ落下",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	reflexhit_vector = 195, //再帰ヒット時は通常ベクトル

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			vector_time = -1, // 発生時間

			ukemitime = 41, // 基本受け身不可時間 25+15

			vector_num = 195, // 使用ベクトル番号
			hit_pattern = 333,
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = 1, // 床受け身番号
		},
		{
			vector_time = -1, // 発生時間

			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算

			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 350,
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},
	]
})



//ガードセット
/////////////////////
vectmpl.add({
	number = 150, // 定義番号

	name = "立ガード弱",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardS",
	power=def_VL_Pow_LV1, //弱やられレベル
	
	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 60, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Ground, //
			guard_pattern = def_VL_GuardPat_Ground,
			vector_time = def_VL_VT_Guard_Std_LV1, // 発生時間
			vector_returntime = 14, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル
		},
	]
})
/////////////////////
vectmpl.add({
	number = 151, // 定義番号

	name = "立ガード中",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardS",

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 61, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Ground, //
			guard_pattern = def_VL_GuardPat_Ground,
			vector_time = def_VL_VT_Guard_Std_LV2, // 発生時間
			vector_returntime = 16, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル
		},
	]
})
/////////////////////
vectmpl.add({
	number = 152, // 定義番号

	name = "立ガード強",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardS",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 62, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Ground, //
			guard_pattern = def_VL_GuardPat_Ground,
			vector_time = def_VL_VT_Guard_Std_LV3, // 発生時間
			vector_returntime = 18, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル
		},
	]
})
/////////////////////
vectmpl.add({
	number = 153, // 定義番号

	name = "立ガード特",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardS",

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 66, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Ground, //
			guard_pattern = def_VL_GuardPat_Ground,
			vector_time = def_VL_VT_Guard_Std_LV4, // 発生時間
			vector_returntime = 24, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル
		},
	]
})
/////////////////////
vectmpl.add({
	number = 154, // 定義番号

	name = "立ガード超",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardS",
	power=def_VL_Pow_LV3, //強やられレベル
	
	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 68, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Ground, //
			guard_pattern = def_VL_GuardPat_Ground,
			vector_time = def_VL_VT_Guard_Std_LV5, // 発生時間
			vector_returntime = 27, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル
		},
	]
})
/////////////////////
vectmpl.add({
	number = 155, // 定義番号

	name = "立ガード微特",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardS",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 62, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Ground, //
			guard_pattern = def_VL_GuardPat_Ground,
			vector_time = def_VL_VT_Guard_Std_LV3p, // 発生時間
			vector_returntime = 18, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル
		},
	]
})










/////////////////////
vectmpl.add({
	number = 160, // 定義番号

	name = "屈ガード弱",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardC",
	power=def_VL_Pow_LV1, //弱やられレベル
	
	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 60, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Crouch, //
			guard_pattern = def_VL_GuardPat_Crouch,
			vector_time = def_VL_VT_Guard_Std_LV1, // 発生時間
			vector_returntime = 14, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル
			
		},
	]
})
/////////////////////
vectmpl.add({
	number = 161, // 定義番号

	name = "屈ガード中",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardC",

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 61, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Crouch, //
			guard_pattern = def_VL_GuardPat_Crouch,
			vector_time = def_VL_VT_Guard_Std_LV2, // 発生時間
			vector_returntime = 17, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル
		},
	]
})
/////////////////////
vectmpl.add({
	number = 162, // 定義番号

	name = "屈ガード強",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardC",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 62, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Crouch, //
			guard_pattern = def_VL_GuardPat_Crouch,
			vector_time = def_VL_VT_Guard_Std_LV3, // 発生時間
			vector_returntime = 22, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル
		},
	]
})
/////////////////////
vectmpl.add({
	number = 163, // 定義番号

	name = "屈ガード特",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardC",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 66, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Crouch, //
			guard_pattern = def_VL_GuardPat_Crouch,
			vector_time = def_VL_VT_Guard_Std_LV4, // 発生時間
			vector_returntime = 24, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル
		},
	]
})
/////////////////////
vectmpl.add({
	number = 164, // 定義番号

	name = "屈ガード超",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardC",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 68, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Crouch, //
			guard_pattern = def_VL_GuardPat_Crouch,
			vector_time = def_VL_VT_Guard_Std_LV5, // 発生時間
			vector_returntime = 27, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル
		},
	]
})
/////////////////////
vectmpl.add({
	number = 165, // 定義番号

	name = "屈ガード微特",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardC",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 62, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Crouch, //
			guard_pattern = def_VL_GuardPat_Crouch,
			vector_time = def_VL_VT_Guard_Std_LV3p, // 発生時間
			vector_returntime = 22, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル
		},
	]
})
























/////////////////////
vectmpl.add({
	number = 170, // 定義番号

	name = "空ガード弱",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_KoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardA",
	power=def_VL_Pow_LV1, //弱やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_num = 90, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Air, //
			guard_pattern = def_VL_GuardPat_Air,
			vector_time = def_VL_VT_Guard_Air_LV1, // 発生時間
			vector_returntime = 10, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 判定ツールのパターンの状態（地上とか空中）を見るフラグ
		},
	]
})
/////////////////////
vectmpl.add({
	number = 171, // 定義番号

	name = "空ガード中",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_KoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardA",

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_num = 91, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Air, //
			guard_pattern = def_VL_GuardPat_Air,
			vector_time = def_VL_VT_Guard_Air_LV2, // 発生時間
			vector_returntime = 10, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 判定ツールのパターンの状態（地上とか空中）を見るフラグ
		},
	]
})
/////////////////////
vectmpl.add({
	number = 172, // 定義番号

	name = "空ガード強",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_KoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardA",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_num = 92, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Air, //
			guard_pattern = def_VL_GuardPat_Air,
			vector_time = def_VL_VT_Guard_Air_LV3, // 発生時間
			vector_returntime = 10, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 判定ツールのパターンの状態（地上とか空中）を見るフラグ
		},
	]
})

/////////////////////
vectmpl.add({
	number = 173, // 定義番号

	name = "空ガード特",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_KoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardA",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_num = 92, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Air, //
			guard_pattern = def_VL_GuardPat_Air,
			vector_time = def_VL_VT_Guard_Air_LV4, // 発生時間
			vector_returntime = 10, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 判定ツールのパターンの状態（地上とか空中）を見るフラグ
		},
	]
})

/////////////////////
vectmpl.add({
	number = 174, // 定義番号

	name = "空ガード超",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_KoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardA",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_num = 92, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Air, //
			guard_pattern = def_VL_GuardPat_Air,
			vector_time = def_VL_VT_Guard_Air_LV5, // 発生時間
			vector_returntime = 10, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 判定ツールのパターンの状態（地上とか空中）を見るフラグ
		},
	]
})
/////////////////////
vectmpl.add({
	number = 175, // 定義番号

	name = "空ガード微特",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_KoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardA",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_num = 92, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Air, //
			guard_pattern = def_VL_GuardPat_Air,
			vector_time = def_VL_VT_Guard_Air_LV3p, // 発生時間
			vector_returntime = 10, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 判定ツールのパターンの状態（地上とか空中）を見るフラグ
		},
	]
})


/////////////////////
vectmpl.add({
	number = 176, // 定義番号

	name = "立ガード超長",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardS",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 209, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Ground, //
			guard_pattern = def_VL_GuardPat_Ground,
			vector_time = def_VL_VT_Guard_Std_LV3, // 発生時間
			vector_returntime = 18, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル
		},
	]
})

/////////////////////
vectmpl.add({
	number = 177, // 定義番号

	name = "屈ガード超長",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardC",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 209, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Crouch, //
			guard_pattern = def_VL_GuardPat_Crouch,
			vector_time = def_VL_VT_Guard_Std_LV3, // 発生時間
			vector_returntime = 22, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル
		},
	]
})


/*

/////////////////////
vectmpl.add({
	number = 175, // 定義番号

	name = "失敗空ガード弱",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_KoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardA",
//	isFailedGuardVec = 1, // 失敗ガード用のベクトル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			ukemitime = 0, // 基本受け身不可時間
			vector_num = 91, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Air, //
			guard_pattern = def_VL_GuardPat_Air,
			vector_time = 10, // 発生時間
			vector_returntime = 10, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 判定ツールのパターンの状態（地上とか空中）を見るフラグ
		},
	]
})
/////////////////////
vectmpl.add({
	number = 176, // 定義番号

	name = "失敗空ガード中",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_KoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardA",
//	isFailedGuardVec = 1, // 失敗ガード用のベクトル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			ukemitime = 0, // 基本受け身不可時間
			vector_num = 92, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Air, //
			guard_pattern = def_VL_GuardPat_Air,
			vector_time = 16, // 発生時間
			vector_returntime = 10, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 判定ツールのパターンの状態（地上とか空中）を見るフラグ
		},
	]
})

/////////////////////
vectmpl.add({
	number = 177, // 定義番号

	name = "失敗空ガード強",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_KoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardA",
//	isFailedGuardVec = 1, // 失敗ガード用のベクトル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			ukemitime = 0, // 基本受け身不可時間
			vector_num = 92, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Air, //
			guard_pattern = def_VL_GuardPat_Air,
			vector_time = 19, // 発生時間
			vector_returntime = 10, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 判定ツールのパターンの状態（地上とか空中）を見るフラグ
		},
	]
})

*/

/////////////////////
vectmpl.add({
	number = 180, // 定義番号

	name = "ガード浮き横",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_KoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardA",
	power=def_VL_Pow_LV3|def_VL_Pow_GuardFloat, //強やられレベル,ガードフロート

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_num = 180, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Air, //
			guard_pattern = def_VL_GuardPat_Air,
			vector_time = 24, // 発生時間
			vector_returntime = 10, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_nextnodown = true, // 移行時にダウン状態としない
			flag_isgroundvector = true, // 判定ツールのパターンの状態（地上とか空中）を見るフラグ
		},
	]
})

/////////////////////
vectmpl.add({
	number = 181, // 定義番号

	name = "ガード浮き縦",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_KoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardA",
	power=def_VL_Pow_LV3|def_VL_Pow_GuardFloat, //強やられレベル,ガードフロート

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_num = 181, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Air, //
			guard_pattern = def_VL_GuardPat_Air,
			vector_time = 24, // 発生時間
			vector_returntime = 10, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_nextnodown = true, // 移行時にダウン状態としない
			flag_isgroundvector = true, // 判定ツールのパターンの状態（地上とか空中）を見るフラグ
		},
	]
})

/////////////////////
vectmpl.add({
	number = 182, // 定義番号

	name = "立ガード中短",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardS",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 208, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Ground, //
			guard_pattern = def_VL_GuardPat_Ground,
			vector_time = def_VL_VT_Guard_Std_LV3, // 発生時間
			vector_returntime = 18, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル
		},
	]
})

/////////////////////
vectmpl.add({
	number = 183, // 定義番号

	name = "屈ガード中短",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardC",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 208, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Crouch, //
			guard_pattern = def_VL_GuardPat_Crouch,
			vector_time = def_VL_VT_Guard_Std_LV3, // 発生時間
			vector_returntime = 22, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル
		},
	]
})

/////////////////////
vectmpl.add({
	number = 184, // 定義番号

	name = "立ガード強短",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardS",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 207, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Ground, //
			guard_pattern = def_VL_GuardPat_Ground,
			vector_time = def_VL_VT_Guard_Std_LV3, // 発生時間
			vector_returntime = 18, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル
		},
	]
})

/////////////////////
vectmpl.add({
	number = 185, // 定義番号

	name = "屈ガード強短",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardC",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 207, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Crouch, //
			guard_pattern = def_VL_GuardPat_Crouch,
			vector_time = def_VL_VT_Guard_Std_LV3, // 発生時間
			vector_returntime = 22, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル
		},
	]
})

/////////////////////
vectmpl.add({
	number = 186, // 定義番号

	name = "立ガード中長",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardS",

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 206, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Ground, //
			guard_pattern = def_VL_GuardPat_Ground,
			vector_time = def_VL_VT_Guard_Std_LV2, // 発生時間
			vector_returntime = 16, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル
		},
	]
})

/////////////////////
vectmpl.add({
	number = 187, // 定義番号

	name = "屈ガード中長",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardC",

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 206, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Crouch, //
			guard_pattern = def_VL_GuardPat_Crouch,
			vector_time = def_VL_VT_Guard_Std_LV2, // 発生時間
			vector_returntime = 17, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル
		},
	]
})


/////////////////////
vectmpl.add({
	number = 189, // 定義番号

	name = "きりもみ横吹き飛び", // 壁バウンドしないだけ
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",
	//wallbound_vector=251, //大壁バウンド

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 31, // 基本受け身不可時間
			vector_num = 189, // 使用ベクトル番号
			hit_pattern = 333,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = 1, // 床受け身番号
			
			//flags = [ "boundwall", "erasekasanari" ],
			//flag_boundwall = true, // 
			//flag_erasekasanari = true, // 重なり消去
		},		
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 350,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},
	]
})


/////////////////////
vectmpl.add({
	number = 190, // 定義番号

	name = "即落吹き飛び",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	//hitflag_set = 0, // 「当たった時」にセットするフラグ（0-31）

	Finalize_Hit = "Mv_Modori_Down",
	
	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 31, // 基本受け身不可時間
			vector_num = 190, // 使用ベクトル番号
			hit_pattern = 320,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = 1, // 床受け身番号
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 350,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名	
		},
	]
})
/////////////////////
vectmpl.add({
	number = 191, // 定義番号

	name = "即落斜め上吹き飛び",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 31, // 基本受け身不可時間
			vector_num = 191, // 使用ベクトル番号
			hit_pattern = 320,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = 2, // 床受け身番号
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 350,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名			
		},
	]
})
/////////////////////
vectmpl.add({
	number = 192, // 定義番号

	name = "即落きりもみ吹き飛び",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 31, // 基本受け身不可時間
			vector_num = 192, // 使用ベクトル番号
			hit_pattern = 333,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = 1, // 床受け身番号
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 350,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},
	]
})

/////////////////////
vectmpl.add({
	number = 193, // 定義番号

	name = "しりもち横吹き飛び強",
	prio_vector = 30, // ベクトル優先度
	ko_vector = def_VL_KoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_YarareC", //レバガチャチェックへ
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 29, // 基本受け身不可時間
			vector_num = 17, // 使用ベクトル番号
			hit_pattern = 320, //
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			// flag_isgroundvector = true, // 地上のけぞりベクトル
			flag_noboundmutekiplus = true, // バウンドによる無敵カウントの加算を行わない
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 2, // 使用ベクトル番号
			hit_pattern = 313,
			vector_time = 26, // 発生時間
			vector_returntime = -1, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			//※vector_typeが0だと入らないけど、寝てるところとかに使ってるのでかえれない
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル
			//out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
			flag_isviewhitbacktime = true, // 強制でのけぞり時間ゲージを表示させる（通常は受け身時間表示）			
			flag_usecombopoint = true, // ２バウンド以降であった場合にもコンボポイントを適用する（１バウンド目は必ず適用）
		},	
	]
})
/////////////////////
vectmpl.add({
	number = 194, // 定義番号

	name = "微高前転倒",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 26, // 基本受け身不可時間
			vector_num = 194, // 使用ベクトル番号
			hit_pattern = 326,
			vector_time = -1, // 発生時間
			vector_returntime = 10, // 壁反射ベクトル
			ground_ukemi_num = 1, // 床受け身番号
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 352,
			
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -1005, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
		},
	]
})

/////////////////////
vectmpl.add({
	number = 195, // 定義番号

	name = "きりもみ落下",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			vector_time = -1, // 発生時間

			ukemitime = 26, // 基本受け身不可時間

			vector_num = 195, // 使用ベクトル番号
			hit_pattern = 333,
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = 1, // 床受け身番号
		},
		{
			vector_time = -1, // 発生時間

			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算

			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 350,
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},
	]
})

/////////////////////
vectmpl.add({
	number = 196, // 定義番号

	name = "しりもち横吹き飛び",
	prio_vector = 30, // ベクトル優先度
	ko_vector = def_VL_KoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_YarareC", //レバガチャチェックへ
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 29, // 基本受け身不可時間
			vector_num = 202, // 使用ベクトル番号
			hit_pattern = 320, //
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			// flag_isgroundvector = true, // 地上のけぞりベクトル
			flag_noboundmutekiplus = true, // バウンドによる無敵カウントの加算を行わない
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 2, // 使用ベクトル番号
			hit_pattern = 313,
			vector_time = 20, // 発生時間
			vector_returntime = -1, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			//※vector_typeが0だと入らないけど、寝てるところとかに使ってるのでかえれない
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル
			//out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
			flag_isviewhitbacktime = true, // 強制でのけぞり時間ゲージを表示させる（通常は受け身時間表示）			
			flag_usecombopoint = true, // ２バウンド以降であった場合にもコンボポイントを適用する（１バウンド目は必ず適用）
		},	
	]
})
/////////////////////
vectmpl.add({
	number = 197, // 定義番号

	name = "しりもち弱",
	ukemitime = 0, // 基本受け身不可時間
	prio_vector = 30, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない
	Finalize_Hit = "Mv_Modori_YarareC", //レバガチャチェックへ
	
	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 201, // 使用ベクトル番号
			hit_pattern = 312,
			vector_time = 20, // 発生時間
			vector_returntime = 10, // 壁反射ベクトル			
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル
		},
	]
})

/////////////////////
vectmpl.add({
	number = 198, // 定義番号

	name = "しりもち中",
	ukemitime = 0, // 基本受け身不可時間
	prio_vector = 30, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない
	Finalize_Hit = "Mv_Modori_YarareC", //レバガチャチェックへ
	
	reflexhit_vector = 25, // 後ろ転倒

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 201, // 使用ベクトル番号
			hit_pattern = 312,
			vector_time = 25, // 発生時間
			vector_returntime = 10, // 壁反射ベクトル			
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル
		},
	]
})

/////////////////////
vectmpl.add({
	number = 199, // 定義番号

	name = "しりもち落下",
	prio_vector = 30, // ベクトル優先度
	ko_vector = def_VL_KoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_YarareC", //レバガチャチェックへ

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 31, // 基本受け身不可時間
			vector_num = 199, // 使用ベクトル番号
			hit_pattern = 313, //
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル
		},
		
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 2, // 使用ベクトル番号
			hit_pattern = 313,
			vector_time = 23, // 発生時間
			vector_returntime = -1, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル
			//out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
			flag_isviewhitbacktime = true, // 強制でのけぞり時間ゲージを表示させる（通常は受け身時間表示）			
		},
	]
})


/////////////////////
vectmpl.add({
	number = 200, // 定義番号

	name = "しりもち超叩きつけ",
	prio_vector = 30, // ベクトル優先度
	ko_vector = def_VL_KoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_YarareC", //レバガチャチェックへ
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 31, // 基本受け身不可時間
			vector_num = 200, // 使用ベクトル番号
			hit_pattern = 313, //
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 2, // 使用ベクトル番号
			hit_pattern = 313,
			vector_time = 25, // 発生時間
			vector_returntime = -1, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			//※vector_typeが0だと入らないけど、寝てるところとかに使ってるのでかえれない
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル
			//out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
			flag_isviewhitbacktime = true, // 強制でのけぞり時間ゲージを表示させる（通常は受け身時間表示）			
			flag_usecombopoint = true, // ２バウンド以降であった場合にもコンボポイントを適用する（１バウンド目は必ず適用）
		},		
	]
})


/////////////////////
vectmpl.add({
	number = 201, // 定義番号

	name = "しりもち",
	ukemitime = 0, // 基本受け身不可時間
	prio_vector = 30, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない
	Finalize_Hit = "Mv_Modori_YarareC", //レバガチャチェックへ
	
	reflexhit_vector = 25, // 後ろ転倒
	
	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 201, // 使用ベクトル番号
			hit_pattern = 312,
			vector_time = 31, // 発生時間
			vector_returntime = 10, // 壁反射ベクトル			
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル
		},
	]
})

/////////////////////
vectmpl.add({
	number = 202, // 定義番号

	name = "崩れ落ちダウン",
	prio_vector = 0, // ベクトル優先度
	//ko_vector = 0, 
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 3, // テーブル数
	tbl = 
	[
		{
			vector_time = 25, // 発生時間

			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			ukemitime = 36, // 基本受け身不可時間
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 327,
			vector_returntime = 10, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Ground_B", // 発生エフェクト名
			flag_isgroundvector = true, // 地上のけぞりベクトル			
		},
		{
			vector_time = 4, // 発生時間

			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 328,
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_noboundmutekiplus = true, // 激突時の無敵カウントを加算しない
		},		
		{
			vector_time = -1, // 発生時間

			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 352,
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
		},		
	]
})

//0401追加鉄拳浮き
/////////////////////
vectmpl.add({
	number = 203, // 定義番号

	name = "真下超バウンド",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 3, // テーブル数
	tbl = 
	[
		{
			ukemitime = 31, // 基本受け身不可時間
			vector_num = 22, // 使用ベクトル番号
			hit_pattern = 346, //332代用
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = 1, // 床受け身番号
		},
		{
			vector_num = 203, // 使用ベクトル番号
			hit_pattern = 353,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -1010, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = 1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_PrecipitateDown", // 発生エフェクト名
			flag_noboundmutekiplus = true, // バウンドによる無敵カウントの加算を行わない
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 354,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
		},			
	]
})

/////////////////////
vectmpl.add({
	number = 204, // 定義番号

	name = "真下MBバウンド", //メルブラっぽい叩きつけバウンド
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 3, // テーブル数
	tbl = 
	[
		{
			ukemitime = 31, // 基本受け身不可時間
			vector_num = 22, // 使用ベクトル番号
			hit_pattern = 346, //332代用
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = 1, // 床受け身番号
		},
		{
			vector_num = 204, // 使用ベクトル番号
			hit_pattern = 330,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -1010, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = 1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_PrecipitateDown", // 発生エフェクト名
			flag_noboundmutekiplus = true, // バウンドによる無敵カウントの加算を行わない
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 354,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
		},			
	]
})

/////////////////////
vectmpl.add({
	number = 205, // 定義番号

	name = "しりもち特",
	ukemitime = 0, // 基本受け身不可時間
	prio_vector = 30, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない
	Finalize_Hit = "Mv_Modori_YarareC", //レバガチャチェックへ
	
	reflexhit_vector = 25, // 後ろ転倒
	
	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 201, // 使用ベクトル番号
			hit_pattern = 312,
			vector_time = 36, // 発生時間
			vector_returntime = 10, // 壁反射ベクトル			
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル
		},
	]
})

/////////////////////
vectmpl.add({
	number = 206, // 定義番号

	name = "斜め下MBバウンド", //メルブラっぽい叩きつけバウンド
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 3, // テーブル数
	tbl = 
	[
		{
			ukemitime = 31, // 基本受け身不可時間
			vector_num = 16, // 使用ベクトル番号
			hit_pattern = 346, //332代用
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = 1, // 床受け身番号
		},
		{
			vector_num = 204, // 使用ベクトル番号
			hit_pattern = 330,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -1010, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = 1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_PrecipitateDown", // 発生エフェクト名
			flag_noboundmutekiplus = true, // バウンドによる無敵カウントの加算を行わない
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 354,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
		},			
	]
})

/////////////////////
vectmpl.add({
	number = 207, // 定義番号

	name = "立ガード強長",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardS",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 205, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Ground, //
			guard_pattern = def_VL_GuardPat_Ground,
			vector_time = def_VL_VT_Guard_Std_LV3, // 発生時間
			vector_returntime = 18, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル
		},
	]
})

/////////////////////
vectmpl.add({
	number = 208, // 定義番号

	name = "屈ガード強長",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardC",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 205, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Crouch, //
			guard_pattern = def_VL_GuardPat_Crouch,
			vector_time = def_VL_VT_Guard_Std_LV3, // 発生時間
			vector_returntime = 22, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル
		},
	]
})

/////////////////////
vectmpl.add({
	number = 209, // 定義番号

	name = "超きりもみ垂直浮き",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 40, // 基本受け身不可時間
			vector_num = 220, // 使用ベクトル番号
			hit_pattern = 334,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = 1, // 床受け身番号
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 351,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},
	]
})

/////////////////////
vectmpl.add({
	number = 210, // 定義番号

	name = "きりもみ垂直浮き",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	//reflexhit_vector = 29, // 再起ヒットベクトル修正（-1 or ツールでチェック無し だと修正しない）

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 26, // 基本受け身不可時間
			vector_num = 10, // 使用ベクトル番号
			hit_pattern = 334,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = 1, // 床受け身番号
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 351,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},
	]
})


/////////////////////
vectmpl.add({
	number = 211, // 定義番号

	name = "超斜め腹吹き飛び小壁バウンド",
	prio_vector = 110, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",
	wallbound_vector=250, //大壁バウンド	

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 31, // 基本受け身不可時間
			vector_num = 211, // 使用ベクトル番号
			hit_pattern = 331,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = 3, // 床受け身番号
			
			flags = [ "boundwall", "erasekasanari" ],
			//flag_boundwall = true, // 
			//flag_erasekasanari = true, // 重なり消去
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 350,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},
	]
})


/////////////////////
vectmpl.add({
	number = 212, // 定義番号

	name = "超腹吹き飛び小壁バウンド",
	prio_vector = 110, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",
	wallbound_vector=250, //大壁バウンド	

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 31, // 基本受け身不可時間
			vector_num = 87, // 使用ベクトル番号
			hit_pattern = 331,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = 3, // 床受け身番号
			
			flags = [ "boundwall", "erasekasanari" ],
			//flag_boundwall = true, // 
			//flag_erasekasanari = true, // 重なり消去
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 350,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},
	]
})

/////////////////////
vectmpl.add({
	number = 213, // 定義番号

	name = "超横浮きダウン",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 31, // 基本受け身不可時間
			vector_num = 213, // 使用ベクトル番号
			hit_pattern = 320,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = 3, // 床受け身番号
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 350,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},
	]
})

/////////////////////
vectmpl.add({
	number = 214, // 定義番号

	name = "真下高バウンドのみ",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 31, // 基本受け身不可時間
			vector_num = 48, // 使用ベクトル番号
			hit_pattern = 353,
			vector_time = -1, // 発生時間
			vector_returntime = 30, // 壁反射ベクトル
			ground_ukemi_num = 2, // 床受け身番号

			out_effect_name = "Eff_Hit_PrecipitateDown", // 発生エフェクト名
			
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 354,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
		},			
	]
})
/////////////////////
vectmpl.add({
	number = 215, // 定義番号

	name = "ワレン真下投げバウンド",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 3, // テーブル数
	tbl = 
	[
		{
			ukemitime = 31, // 基本受け身不可時間
			vector_num = 215, // 使用ベクトル番号
			hit_pattern = 346, //332代用
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
		},
		{
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 353,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -1010, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = 1, // 床受け身番号 -1:地上受け身不可
			flag_noboundmutekiplus = true, // バウンドによる無敵カウントの加算を行わない
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 354,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
		},
	]
})
/////////////////////
vectmpl.add({
	number = 216, // 定義番号

	name = "ゴルドー引き寄せ転倒",
	prio_vector = 100, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_YarareS",			

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 26, // 基本受け身不可時間
			vector_num = 216, // 使用ベクトル番号
			hit_pattern = 326,
			vector_time = -1, // 発生時間
			vector_returntime = 10, // 壁反射ベクトル
			ground_ukemi_num = 1, // 床受け身番号
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 352,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},
	]
})


/////////////////////
vectmpl.add({
	number = 217, // 定義番号

	name = "超垂直バウンド",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 3, // テーブル数
	tbl = 
	[
		{
			ukemitime = 31, // 基本受け身不可時間
			vector_num = 220, // 使用ベクトル番号
			hit_pattern = 330,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = 1, // 床受け身番号
		},
		{
			vector_num = 42, // 使用ベクトル番号
			hit_pattern = 353,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -1010, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = 1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_PrecipitateDown", // 発生エフェクト名
			flag_noboundmutekiplus = true, // バウンドによる無敵カウントの加算を行わない
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 354,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
		},		
	]
})

/////////////////////
vectmpl.add({
	number = 218, // 定義番号

	name = "ゴルドー↓引き寄せ転倒",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",			

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 26, // 基本受け身不可時間
			vector_num = 218, // 使用ベクトル番号
			hit_pattern = 326,
			vector_time = -1, // 発生時間
			vector_returntime = 10, // 壁反射ベクトル
			ground_ukemi_num = 1, // 床受け身番号
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 352,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},
	]
})

/////////////////////
vectmpl.add({
	number = 219, // 定義番号

	name = "真下落下",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			ukemitime = 31, // 基本受け身不可時間
			vector_num = 219, // 使用ベクトル番号
			hit_pattern = 346, //332代用
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = 1, // 床受け身番号
		},
	]
})
/////////////////////
vectmpl.add({
	number = 220, // 定義番号

	name = "超垂直吹き飛び",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 31, // 基本受け身不可時間
			vector_num = 220, // 使用ベクトル番号
			hit_pattern = 330,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = 2, // 床受け身番号
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 351,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名	
		},		
	]
})


/////////////////////
vectmpl.add({
	number = 221, // 定義番号

	name = "超超垂直吹き飛び",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 31, // 基本受け身不可時間
			vector_num = 221, // 使用ベクトル番号
			hit_pattern = 330,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = 2, // 床受け身番号
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 351,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名	
		},		
	]
})

/////////////////////
vectmpl.add({
	number = 222, // 定義番号

	name = "超天井バウンド",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 3, // テーブル数
	tbl = 
	[
		{
			vector_time = -1, // 発生時間

			ukemitime = 31, // 基本受け身不可時間
			vector_num = 22, // 使用ベクトル番号
			hit_pattern = 326, //332代用
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = 1, // 床受け身番号
			//out_effect_name = "Eff_Hit_PrecipitateDown", // 発生エフェクト名
		},
		{
			vector_num = 203, // 使用ベクトル番号
			hit_pattern = 353,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -1010, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = 1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_PrecipitateDown", // 発生エフェクト名
			flag_noboundmutekiplus = true, // バウンドによる無敵カウントの加算を行わない
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 354,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
		},	
	]
})



// 吹き飛び
/////////////////////
vectmpl.add({
	number = 223, // 定義番号

	name = "腹吹き飛び小壁バウンド",
	prio_vector = 110, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	wallbound_vector = 250, //小壁バウンド	

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 31, // 基本受け身不可時間
			vector_num = 9, // 使用ベクトル番号
			hit_pattern = 331,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = 3, // 床受け身番号
			
			flags = [ "boundwall", "erasekasanari" ],
			//flag_boundwall = true, // 
			//flag_erasekasanari = true, // 重なり消去
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 350,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},
	]
})


/////////////////////
vectmpl.add({
	number = 224, // 定義番号

	name = "斜め上大吹き飛び",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 31, // 基本受け身不可時間
			vector_num = 224, // 使用ベクトル番号
			hit_pattern = 330,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = 2, // 床受け身番号
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 350,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名			
		},
	]
})

/////////////////////
vectmpl.add({
	number = 225, // 定義番号

	name = "きり吹飛小壁",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	wallbound_vector = 250, //小壁バウンド	

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 26, // 基本受け身不可時間
			vector_num = 225, // 使用ベクトル番号
			hit_pattern = 333,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = 2, // 床受け身番号

			flag_boundwall = true, // 
			flag_erasekasanari = true, // 重なり消去
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 350,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},
	]
})



// リンネ投げ
/////////////////////
vectmpl.add({
	number = 226, // 定義番号

	name = "リンネ投げ転倒",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 120, // 基本受け身不可時間
			vector_num = 226, // 使用ベクトル番号
			hit_pattern = 320,
			vector_time = -1, // 発生時間
			vector_returntime = 10, // 壁反射ベクトル
			ground_ukemi_num = 1, // 床受け身番号 -1:地上受け身不可
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 350,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -1005, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名				
		},
	]
})

/////////////////////
vectmpl.add({
	number = 227, // 定義番号

	name = "超ゆっくり腹吹き飛び",
	prio_vector = 999, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			ukemitime = -1, // 基本受け身不可時間
			vector_num = 227, // 使用ベクトル番号
			hit_pattern = 331,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = 3, // 床受け身番号

			//flag_boundwall = true, // 
			flag_erasekasanari = true, // 重なり消去
		},
	]
})

/////////////////////
vectmpl.add({
	number = 228, // 定義番号

	name = "超斜め上吹き飛び", // 
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 31, // 基本受け身不可時間
			vector_num = 228, // 使用ベクトル番号
			hit_pattern = 331,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = 2, // 床受け身番号

			flag_boundwall = true, // 
			flag_erasekasanari = true, // 重なり消去
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 350,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},
	]
})

/////////////////////
vectmpl.add({
	number = 229, // 定義番号

	name = "腹吹き飛び壁貼り付き",
	prio_vector = 110, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	wallbound_vector = 249, //壁貼り付き	

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 31, // 基本受け身不可時間
			vector_num = 9, // 使用ベクトル番号
			hit_pattern = 331,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = 3, // 床受け身番号
			
			flags = [ "boundwall", "erasekasanari" ],
			//flag_boundwall = true, // 
			//flag_erasekasanari = true, // 重なり消去
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 350,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},
	]
})




/////////////////////
vectmpl.add({
	number = 230, // 定義番号

	name = "GC立ガード",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardS",
	power=def_VL_Pow_LV3, //強やられレベル
	
	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 230, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Ground, //
			guard_pattern = def_VL_GuardPat_Ground,
			vector_time = 18, // 発生時間
			vector_returntime = 24, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル
		},
	]
})

/////////////////////
vectmpl.add({
	number = 231, // 定義番号

	name = "GC空ガード",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_KoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardA",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_num = 231, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Air, //
			guard_pattern = def_VL_GuardPat_Air,
			vector_time = 14, // 発生時間
			vector_returntime = 10, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 判定ツールのパターンの状態（地上とか空中）を見るフラグ
		},
	]
})

/////////////////////
vectmpl.add({
	number = 232, // 定義番号

	name = "GC屈ガード",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardC",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 230, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Crouch, //
			guard_pattern = def_VL_GuardPat_Crouch,
			vector_time = 18, // 発生時間
			vector_returntime = 24, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル
		},
	]
})

/////////////////////
vectmpl.add({
	number = 233, // 定義番号

	name = "GC吹き飛ばし",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 38, // 基本受け身不可時間
			vector_num = 232, // 使用ベクトル番号
			hit_pattern = 320,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			//ground_ukemi_num = 2, // 床受け身番号
			ground_ukemi_num = 2, // 床受け身番号 -1:地上受け身不可
			vector_returnvalue = 50, // 壁反射ベクトル割合（100でx1.0、記述無しだと100
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 350,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},
	]
})
/////////////////////
vectmpl.add({
	number = 234, // 定義番号

	name = "斜め下叩きつけダウン",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 31, // 基本受け身不可時間
			vector_num = 16, // 使用ベクトル番号
			hit_pattern = 324,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 350,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},
	]
})

vectmpl.add({
	number = 235, // 定義番号
	name = "ウェブ浮き",
	prio_vector = 90, // ベクトル優先度
	reflexhit_vector = 32, // 再起ヒットベクトル修正（-1 or ツールでチェック無し だと修正しない）

	hitflag_set = 1, // 「当たった時」にセットするフラグ（0-31）
	hitflag_check = 1, // 「当たった時」にチェックするフラグ（0-31）
	hitflag_vector = 32, // hitflag_check が有効だった場合に移行するベクトルテーブル番号
	
	ko_vector = def_VL_KoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",
	
	tblcount = 3, // テーブル数
	tbl = 
	[
		{
			vector_time = 32, // 発生時間・終了すると次へ
			
			ukemitime = 63, // 基本受け身不可時間
			vector_num = 235, // 使用ベクトル番号
			hit_pattern = 320,
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = 2, // 床受け身番号
			flag_erasekasanari = true, // 重なり消去
		},
		{
			vector_time = -1, // 発生時間・最後まで

			ukemitime = 24, // 基本受け身不可時間
			vector_num = 7, // 使用ベクトル番号
			hit_pattern = 320,
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = 2, // 床受け身番号
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 350,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},		
	]
})



/////////////////////
vectmpl.add({
	number = 236, // 定義番号

	name = "ウェブ崩れ落ちダウン",
	prio_vector = 0, // ベクトル優先度
	reflexhit_vector = 32, // 再起ヒットベクトル修正（-1 or ツールでチェック無し だと修正しない）
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない
	
	hitflag_set = 1, // 「当たった時」にセットするフラグ（0-31）
	hitflag_check = 1, // 「当たった時」にチェックするフラグ（0-31）
	hitflag_vector = 32, // hitflag_check が有効だった場合に移行するベクトルテーブル番号	

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 3, // テーブル数
	tbl = 
	[
		{
			vector_time = 28, // 発生時間

			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			ukemitime = 42, // 基本受け身不可時間
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 327,
			vector_returntime = 10, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Ground_B", // 発生エフェクト名
			flag_isgroundvector = true, // 地上のけぞりベクトル	
			flag_erasekasanari = true, // 重なり消去
		},
		{
			vector_time = 4, // 発生時間

			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 328,
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_noboundmutekiplus = true, // 激突時の無敵カウントを加算しない
		},		
		{
			vector_time = -1, // 発生時間

			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 352,
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
		},
	]
})

/////////////////////
vectmpl.add({
	number = 237, // 定義番号

	name = "きりもみ転倒壁",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",
	wallbound_vector = 249, //壁貼り付き

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 26, // 基本受け身不可時間
			vector_num = 27, // 使用ベクトル番号
			hit_pattern = 333,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = 1, // 床受け身番号
			flags = [ "boundwall" ],
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 350,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},
	]
})

/////////////////////
vectmpl.add({
	number = 238, // 定義番号

	name = "コンボＶＯ吹き飛び",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	//hitflag_set = 0, // 「当たった時」にセットするフラグ（0-31）

	Finalize_Hit = "Mv_Modori_Down",
	
	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 31, // 基本受け身不可時間
			vector_num = 10, // 使用ベクトル番号
			hit_pattern = 330,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = 1, // 床受け身番号
			flag_noboundmutekiplus = true, // バウンドによる無敵カウントの加算を行わない
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 351,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名	
		},
	]
})

/////////////////////
vectmpl.add({
	number = 239, // 定義番号

	name = "イグジスト吹き飛び",
	prio_vector = 970, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	//hitflag_set = 0, // 「当たった時」にセットするフラグ（0-31）

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV0, //声無しやられレベル
	
	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = -1, // 基本受け身不可時間
			vector_num = 10, // 使用ベクトル番号
			hit_pattern = 330,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = 1, // 床受け身番号
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 351,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名	
		},
	]
})


/////////////////////
vectmpl.add({
	number = 240, // 定義番号

	name = "あお向け起き上がり",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	power=def_VL_Pow_LV0, //声無しやられレベル

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			ukemitime = -1, // 基本受け身不可時間
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 290, //332代用
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
		},
	]
})

/////////////////////
vectmpl.add({
	number = 241, // 定義番号

	name = "うつ伏せ起き上がり",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	power=def_VL_Pow_LV0, //声無しやられレベル

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			ukemitime = -1, // 基本受け身不可時間
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 291, //332代用
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
		},
	]
})

/////////////////////
vectmpl.add({
	number = 242, // 定義番号

	name = "重傷起き上がり",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	power=def_VL_Pow_LV0, //声無しやられレベル

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			ukemitime = -1, // 基本受け身不可時間
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 292, //332代用
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
		},
	]
})


/////////////////////
vectmpl.add({
	number = 243, // 定義番号

	name = "VO立ガード",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardS",
	power=def_VL_Pow_LV3, //強やられレベル
	
	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 243, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Ground, //
			guard_pattern = def_VL_GuardPat_Ground,
			vector_time = 24, // 発生時間
			vector_returntime = 24, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル
		},
	]
})

/////////////////////
vectmpl.add({
	number = 244, // 定義番号

	name = "VO空中ガード",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_KoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardA",
	power=def_VL_Pow_LV1, //弱やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_num = 244, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Air, //
			guard_pattern = def_VL_GuardPat_Air,
			vector_time = 2, // 発生時間
			vector_returntime = 10, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 判定ツールのパターンの状態（地上とか空中）を見るフラグ
		},
	]
})

/////////////////////
vectmpl.add({
	number = 245, // 定義番号

	name = "VO屈ガード",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Guard = "Mv_Modori_GuardC",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 243, // 使用ベクトル番号
			hit_pattern = def_VL_GuardPat_Crouch, //
			guard_pattern = def_VL_GuardPat_Crouch,
			vector_time = 24, // 発生時間
			vector_returntime = 24, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル
		},
	]
})



/////////////////////
vectmpl.add({
	number = 246, // 定義番号

	name = "引き寄せ腹やられ", // 
	prio_vector = 100, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_YarareS",	

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			vector_num = 245, // 使用ベクトル番号
			hit_pattern = 340,
			vector_time = 15, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Ground_B", // 発生エフェクト名
			flag_isgroundvector = true, // 地上のけぞりベクトル
		},
		{
			vector_num = 246, // 使用ベクトル番号
			hit_pattern = 304,
			vector_time = 20, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Ground_B", // 発生エフェクト名
			flag_isgroundvector = true, // 地上のけぞりベクトル
		},
	]
})

vectmpl.add({
	number = 247, // 定義番号
	name = "呪縛浮き",
	prio_vector = 90, // ベクトル優先度
	reflexhit_vector = 32, // 再起ヒットベクトル修正（-1 or ツールでチェック無し だと修正しない）
	ko_vector = def_VL_KoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",
	
	tblcount = 3, // テーブル数
	tbl = 
	[
		{
			vector_time = 37, // 発生時間・終了すると次へ
			
			ukemitime = 61, // 基本受け身不可時間
			vector_num = 247, // 使用ベクトル番号
			hit_pattern = 320,
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = 2, // 床受け身番号
		},
		{
			vector_time = -1, // 発生時間・最後まで

			ukemitime = 24, // 基本受け身不可時間
			vector_num = 7, // 使用ベクトル番号
			hit_pattern = 320,
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = 2, // 床受け身番号
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 350,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},		
	]
})



/////////////////////
vectmpl.add({
	number = 248, // 定義番号

	name = "呪縛崩れ落ちダウン",
	prio_vector = 0, // ベクトル優先度
	reflexhit_vector = 32, // 再起ヒットベクトル修正（-1 or ツールでチェック無し だと修正しない）
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 3, // テーブル数
	tbl = 
	[
		{
			vector_time = 31, // 発生時間

			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			ukemitime = 42, // 基本受け身不可時間
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 327,
			vector_returntime = 10, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Ground_B", // 発生エフェクト名
			flag_isgroundvector = true, // 地上のけぞりベクトル			
		},
		{
			vector_time = 4, // 発生時間

			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 328,
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_noboundmutekiplus = true, // 激突時の無敵カウントを加算しない
		},		
		{
			vector_time = -1, // 発生時間

			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 352,
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
		},
	]
})

/////////////////////
vectmpl.add({
	number = 249, // 定義番号

	name = "壁貼り付き", // 
	prio_vector = 999, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算

			vector_num = 98, // 使用ベクトル番号
			hit_pattern = "YKabe",
			vector_time = 1, // 発生時間
			vector_returntime = 100, // 壁反射ベクトル
			ground_ukemi_num = 1, // 床受け身番号
			
			out_effect_name = "Eff_WallBound",
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算

			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 354,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					

		},				
	]
})

/////////////////////
vectmpl.add({
	number = 250, // 定義番号

	name = "小壁バウンド", // 
	prio_vector = 999, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算

			vector_num = 99, // 使用ベクトル番号
			hit_pattern = "YKabe",
			vector_time = 1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = 1, // 床受け身番号
			
			out_effect_name = "Eff_WallBound",
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算

			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 354,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					

		},				
	]
})

/////////////////////
vectmpl.add({
	number = 251, // 定義番号

	name = "大壁バウンド", // 
	prio_vector = 999, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算

			vector_num = 101, // 使用ベクトル番号
			hit_pattern = "YKabe",
			vector_time = 1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = 1, // 床受け身番号
			
			out_effect_name = "Eff_WallBound",
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算

			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 354,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					

		},				
	]
})




/////////////////////
vectmpl.add({
	number = 252, // 定義番号

	name = "無声ダウン",
	prio_vector = 100, // ベクトル優先度
	ko_vector = def_VL_KoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV0, //声無しやられレベル

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 25, // 基本受け身不可時間
			vector_num = 7, // 使用ベクトル番号
			hit_pattern = 320,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = 2, // 床受け身番号
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 350,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},
	]
})

/////////////////////
vectmpl.add({
	number = 253, // 定義番号

	name = "KOダウン追い討ち", // 
	prio_vector = 990, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = -1, // 基本受け身不可時間
			vector_num = 26, // 使用ベクトル番号
			hit_pattern = 320,
			vector_time = -1, // 発生時間
			vector_returntime = 10, // 壁反射ベクトル
			ground_ukemi_num = 1, // 床受け身番号
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 350,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可			
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名		
		},
	]
})

/////////////////////
vectmpl.add({
	number = def_VL_GroundKoVector, // 定義番号(254)

	name = "KOのけぞり", // 
	prio_vector = 999, // ベクトル優先度
	ko_vector = def_VL_KoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 3, // テーブル数
	tbl = 
	[
		{
			ukemitime = -1, // 基本受け身不可時間
			vector_num = 254, // 使用ベクトル番号
			hit_pattern = 327,
			vector_time = 25, // 発生時間
			vector_returntime = 10, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Ground_B", // 発生エフェクト名
			//flag_isgroundvector = true, // 地上のけぞりベクトル　この状態で何かあたったら浮いてＫＯにしたいので
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 328,
			vector_time = 4, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_noboundmutekiplus = true, // バウンドによる無敵カウントの加算を行わない
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 354,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
		},		
	]
})




/////////////////////
vectmpl.add({
	number = 255, // 定義番号

	name = "壁バウンド", // 
	prio_vector = 999, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			vector_num = 100, // 使用ベクトル番号
			hit_pattern = "YKabe",
			vector_time = 1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = 1, // 床受け身番号
			
			out_effect_name = "Eff_WallBound",
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 354,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					

		},				
	]
})

// custom vector entries

vectmpl.add({
	number = 109, // 定義番号

	name = "roboakaspike", // 前やばいオートリカバーだった
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 3, // テーブル数
	tbl = 
	[
		{
			ukemitime = 31, // 基本受け身不可時間
			vector_num = 23, // 使用ベクトル番号
			hit_pattern = 324, //332代用
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = 2, // 床受け身番号
		},
		{
			vector_num = 210, // 使用ベクトル番号
			hit_pattern = 330,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -1010, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = 1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_PrecipitateDown", // 発生エフェクト名
			flag_noboundmutekiplus = true, // バウンドによる無敵カウントの加算を行わない
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 354,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
		},	
	]
})

vectmpl.add({
	number = 88, // 定義番号

	name = "crolvl4",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない
//	counterhit_vector = 201, //しりもち

	Finalize_Hit = "Mv_Modori_YarareC",			
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 2, // 使用ベクトル番号
			hit_pattern = 308,
			vector_time = def_VL_VT_Hit_Cro_LV4, // 発生時間
			vector_returntime = 21, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_B", // 発生エフェクト名
		},
	]
})


vectmpl.add({
	number = 89, // 定義番号

	name = "usedbyraka6c",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_YarareS",			
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 85, // 使用ベクトル番号
			hit_pattern = 306,
			vector_time = def_VL_VT_Hit_Std_LV5, // 発生時間
			vector_returntime = def_VL_VT_Hit_Std_LV5, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Ground_B", // 発生エフェクト名
			flag_isgroundvector = true, // 地上のけぞりベクトル			
		},
	]
})


vectmpl.add({
	number = 97, // 定義番号

	name = "crolvl5",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない
//	counterhit_vector = 201, //しりもち

	Finalize_Hit = "Mv_Modori_YarareC",			
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 2, // 使用ベクトル番号
			hit_pattern = 308,
			vector_time = def_VL_VT_Hit_Std_LV5, // 発生時間
			vector_returntime = 21, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_B", // 発生エフェクト名
		},
	]
})

vectmpl.add({
	number = 602, // 定義番号

	name = "gxhyde623c",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 3, // テーブル数
	tbl = 
	[
		{
			ukemitime = 31, // 基本受け身不可時間
			vector_num = 23, // 使用ベクトル番号
			hit_pattern = 324,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = 3, // 床受け身番号
		},
		{
			vector_num = 229, // 使用ベクトル番号
			hit_pattern = 320, // 353 old
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -1010, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = 3, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_SlideDown", // 発生エフェクト名
			flag_noboundmutekiplus = true, // バウンドによる無敵カウントの加算を行わない
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 354,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},				
		
	]
})

vectmpl.add({
	number = 601, // 定義番号

	name = "gxhyde214addb",
	prio_vector = 601, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 3, // テーブル数
	tbl = 
	[
		{
			ukemitime = 31, // 基本受け身不可時間
			vector_num = 23, // 使用ベクトル番号
			hit_pattern = 324,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = 3, // 床受け身番号
		},
		{
			vector_num = 236, // 使用ベクトル番号
			hit_pattern = 320, // 353 old
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -1010, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = 3, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_SlideDown", // 発生エフェクト名
			flag_noboundmutekiplus = true, // バウンドによる無敵カウントの加算を行わない
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 354,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},				
		
	]
})

vectmpl.add({
	number = 99, // 定義番号

	name = "即落きりもみ吹き飛び",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	
	reflexhit_vector = 8, // 後ろ転倒

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 40, // 基本受け身不可時間
			vector_num = 192, // 使用ベクトル番号
			hit_pattern = 333,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = 1, // 床受け身番号
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 350,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},
	]
})

vectmpl.add({
	number = 600, // 定義番号

	name = "gxhydecrossslash",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない
//	counterhit_vector = 201, //しりもち

	Finalize_Hit = "Mv_Modori_YarareS",			
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）
			vector_num = 233, // 使用ベクトル番号
			hit_pattern = 307,
			vector_time = 200, // 発生時間
			vector_returntime = 200, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_B", // 発生エフェクト名
		},
	]
})

vectmpl.add({
	number = 106, // 定義番号

	name = "wag2adrel",
	prio_vector = 0, // ベクトル優先度
	ko_vector = def_VL_KoVector, // KO時のベクトル修正 0 だと修正しない
	Finalize_Hit = "Mv_Modori_Down", //無いとファイナライズ通った時点でエラー
	power=def_VL_Pow_LV0, //声無しやられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 352,
			guard_pattern = def_VL_GuardPat_Ground,
			vector_time = 0, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
		},
	]
})

vectmpl.add({
	number = 113, // 定義番号

	name = "低垂直吹き飛び", //akira yoohoo
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	//hitflag_set = 0, // 「当たった時」にセットするフラグ（0-31）

	Finalize_Hit = "Mv_Modori_Down",
	
	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 25, // 基本受け身不可時間
			vector_num = 113, // 使用ベクトル番号
			hit_pattern = 330,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = 1, // 床受け身番号
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 351,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名	
		},
	]
})

vectmpl.add({
	number = 500, // 定義番号

	name = "basedlaunch", //akira 2ff
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	reflexhit_vector = 22, // 再起ヒットベクトル修正（-1 or ツールでチェック無し だと修正しない）
	//hitflag_set = 0, // 「当たった時」にセットするフラグ（0-31）

	Finalize_Hit = "Mv_Modori_Down",
	
	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 38, // 基本受け身不可時間
			vector_num = 33, // 使用ベクトル番号
			hit_pattern = 330,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = 1, // 床受け身番号
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 351,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名	
		},
	]
})


vectmpl.add({
	number = 117, // 定義番号

	name = "wallSTICK12", //akira 623b
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	wallbound_vector = 123, //小壁バウンド

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 38, // 基本受け身不可時間
			vector_num = 234, // 使用ベクトル番号
			hit_pattern = 333,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = 1, // 床受け身番号
			
			flags = [ "boundwall", "erasekasanari" ],
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 350,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},
	]
})

vectmpl.add({
	number = 123, // 定義番号

	name = "wallboundstick", // akira 623b wallbound
	prio_vector = 999, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 40, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算

			vector_num = 102, // 使用ベクトル番号
			hit_pattern = "YKabe",
			vector_time = 1, // 発生時間
			vector_returntime = 100, // 壁反射ベクトル
			ground_ukemi_num = 1, // 床受け身番号
			
			out_effect_name = "Eff_WallBound",
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算

			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 354,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					

		},				
	]
})

vectmpl.add({
	number = 124, // 定義番号

	name = "naoto_crumple",
	prio_vector = 0, // ベクトル優先度
	//ko_vector = 0, 
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 3, // テーブル数
	tbl = 
	[
		{
			vector_time = 25, // 発生時間

			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			ukemitime = 36, // 基本受け身不可時間
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 327,
			vector_returntime = 10, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Ground_B", // 発生エフェクト名
			flag_isgroundvector = true, // 地上のけぞりベクトル			
		},
		{
			vector_time = 4, // 発生時間

			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 328,
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_noboundmutekiplus = true, // 激突時の無敵カウントを加算しない
		},		
		{
			vector_time = -1, // 発生時間

			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 352,
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
		},		
	]
})

vectmpl.add({
	number = 134, // 定義番号

	name = "naoto_3c",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	wallbound_vector = 250, //小壁バウンド	

	Finalize_Hit = "Mv_Modori_Down",

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 26, // 基本受け身不可時間
			vector_num = 134, // 使用ベクトル番号
			hit_pattern = 333,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = 2, // 床受け身番号

			//flag_boundwall = true, // 
			//flag_erasekasanari = true, // 重なり消去
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 350,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},
	]
})

vectmpl.add({
	number = 135, // 定義番号

	name = "naoto_214214ex_shot",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	//hitflag_set = 0, // 「当たった時」にセットするフラグ（0-31）

	Finalize_Hit = "Mv_Modori_Down",
	
	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 31, // 基本受け身不可時間
			vector_num = 135, // 使用ベクトル番号
			hit_pattern = 330,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = 1, // 床受け身番号
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 351,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名	
		},
	]
})

vectmpl.add({
	number = 136, // 定義番号

	name = "naoto_214214ex_kick_1",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",
	wallbound_vector=138, //大壁バウンド

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 31, // 基本受け身不可時間
			vector_num = 136, // 使用ベクトル番号
			hit_pattern = 333,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = 1, // 床受け身番号
			
			flags = [ "boundwall", "erasekasanari" ],
			//flag_boundwall = true, // 
			//flag_erasekasanari = true, // 重なり消去
		},		
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 350,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},
	]
})

vectmpl.add({
	number = 138, // 定義番号

	name = "naoto_214214ex_kick_2",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",
	wallbound_vector=140, //大壁バウンド

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算

			vector_num = 137, // 使用ベクトル番号
			hit_pattern = "YKabe",
			vector_time = 1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = 1, // 床受け身番号
			
			out_effect_name = "Eff_WallBound",
			
			flags = [ "boundwall" ],
			//flag_noboundmutekiplus = true, // バウンドによる無敵カウントの加算を行わない
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算

			vector_num = 137, // 使用ベクトル番号
			hit_pattern = 354,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					

		},				
	]
})

vectmpl.add({
	number = 140, // 定義番号

	name = "naoto_214214ex_kick_3",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",
	wallbound_vector=141, //大壁バウンド

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算

			vector_num = 138, // 使用ベクトル番号
			hit_pattern = "YKabe",
			vector_time = 1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = 1, // 床受け身番号
			
			out_effect_name = "Eff_WallBound",
			
			flags = [ "boundwall" ],
			flag_noboundmutekiplus = true, // バウンドによる無敵カウントの加算を行わない
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算

			vector_num = 138, // 使用ベクトル番号
			hit_pattern = 354,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					

		},				
	]
})

vectmpl.add({
	number = 141, // 定義番号

	name = "naoto_214214ex_kick_4",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",
	//wallbound_vector=251, //大壁バウンド

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算

			vector_num = 139, // 使用ベクトル番号
			hit_pattern = "YKabe",
			vector_time = 1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = 1, // 床受け身番号
			
			out_effect_name = "Eff_WallBound",
			
			//flags = [ "boundwall" ],
			flag_noboundmutekiplus = true, // バウンドによる無敵カウントの加算を行わない
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算

			vector_num = 139, // 使用ベクトル番号
			hit_pattern = 354,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					

		},				
	]
})

vectmpl.add({
	number = 270, // 定義番号

	name = "naoto_236236ex_shot_no_otg",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV3, //強やられレベル
	
	wallbound_vector=143, //no wall count wallbound
	
	tblcount = 3, // テーブル数
	tbl = 
	[
		{
			ukemitime = 31, // 基本受け身不可時間
			vector_num = 143, // 使用ベクトル番号
			hit_pattern = 324, //332代用
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = 2, // 床受け身番号
			flags = [ "boundwall" ],
			flag_noboundmutekiplus = true,
		},
		{
			vector_num = 43, // 使用ベクトル番号
			hit_pattern = 355,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -1010, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = 2, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
			flags = [ "boundwall" ],
			flag_noboundmutekiplus = true, // バウンドによる無敵カウントの加算を行わない
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 356,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
			flag_noboundmutekiplus = true,
		},		
	]
})

vectmpl.add({
	number = 143, // 定義番号

	name = "naoto_236236ex_nocount_wallbound",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",
	//wallbound_vector=251, //大壁バウンド

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算

			vector_num = 98, // 使用ベクトル番号
			hit_pattern = "YKabe",
			vector_time = 1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = 1, // 床受け身番号
			
			out_effect_name = "Eff_WallBound",
			
			//flags = [ "boundwall" ],
			flag_noboundmutekiplus = true, // バウンドによる無敵カウントの加算を行わない
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算

			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 354,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					

		},				
	]
})

vectmpl.add({
	number = 144, // 定義番号

	name = "naoto_lowspike",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 3, // テーブル数
	tbl = 
	[
		{
			ukemitime = 31, // 基本受け身不可時間
			vector_num = 22, // 使用ベクトル番号
			hit_pattern = 346, //332代用
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = 1, // 床受け身番号
		},
		{
			vector_num = 144, // 使用ベクトル番号
			hit_pattern = 353,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -1010, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = 1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_PrecipitateDown", // 発生エフェクト名
			flag_noboundmutekiplus = true, // バウンドによる無敵カウントの加算を行わない
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 354,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
		},			
	]
})

vectmpl.add({
	number = 256, // 定義番号

	name = "naoto_trap_reflexhit",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	//reflexhit_vector = 10,
	
	hitflag_set = 1, // 「当たった時」にセットするフラグ（0-31）
	hitflag_check = 1, // 「当たった時」にチェックするフラグ（0-31）
	hitflag_vector = 10, // hitflag_check が有効だった場合に移行するベクトルテーブル番号

	Finalize_Hit = "Mv_Modori_Down",
	
	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 48, // 基本受け身不可時間
			vector_num = 10, // 使用ベクトル番号
			hit_pattern = 330,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = 1, // 床受け身番号
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 351,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名	
		},
	]
})

vectmpl.add({
	number = 257, // 定義番号

	name = "naoto_trap_reflexhit_2",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	//reflexhit_vector = 10,
	
	hitflag_set = 2, // 「当たった時」にセットするフラグ（0-31）
	hitflag_check = 2, // 「当たった時」にチェックするフラグ（0-31）
	hitflag_vector = 10, // hitflag_check が有効だった場合に移行するベクトルテーブル番号

	Finalize_Hit = "Mv_Modori_Down",
	
	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 48, // 基本受け身不可時間
			vector_num = 10, // 使用ベクトル番号
			hit_pattern = 330,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = 1, // 床受け身番号
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 351,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名	
		},
	]
})

vectmpl.add({
	number = 258, // 定義番号

	name = "naoto_trap_reflexhit_3",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	reflexhit_vector = 10,

	Finalize_Hit = "Mv_Modori_Down",
	
	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 48, // 基本受け身不可時間
			vector_num = 10, // 使用ベクトル番号
			hit_pattern = 330,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = 1, // 床受け身番号
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 351,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名	
		},
	]
})

vectmpl.add({
	number = 259, // 定義番号

	name = "naoto_236b",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 3, // テーブル数
	tbl = 
	[
		{
			ukemitime = 31, // 基本受け身不可時間
			vector_num = 23, // 使用ベクトル番号
			hit_pattern = 324,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = 3, // 床受け身番号
		},
		{
			vector_num = 249, // 使用ベクトル番号
			hit_pattern = 333, // 333 angled spin
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -1010, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = 3, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_SlideDown", // 発生エフェクト名
			flag_noboundmutekiplus = true, // バウンドによる無敵カウントの加算を行わない
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 354,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},				
		
	]
})

vectmpl.add({
	number = 260, // 定義番号

	name = "naoto_236b_rebound",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 3, // テーブル数
	tbl = 
	[
		{
			ukemitime = 31, // 基本受け身不可時間
			vector_num = 23, // 使用ベクトル番号
			hit_pattern = 324,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = 3, // 床受け身番号
		},
		{
			vector_num = 229, // 使用ベクトル番号
			hit_pattern = 320, // 353 old
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -1010, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = 3, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_SlideDown", // 発生エフェクト名
			flag_noboundmutekiplus = true, // バウンドによる無敵カウントの加算を行わない
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 354,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},				
		
	]
})

vectmpl.add({
	number = 370, // 定義番号

	name = "AkaJC_CH",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV3, //強やられレベル
	
	tblcount = 3, // テーブル数
	tbl = 
	[
		{
			ukemitime = 31, // 基本受け身不可時間
			vector_num = 23, // 使用ベクトル番号
			hit_pattern = 324, //332代用
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
		},
		{
			vector_num = 43, // 使用ベクトル番号
			hit_pattern = 355,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -1010, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_SlideDown", // 発生エフェクト名
			flag_noboundmutekiplus = true, // バウンドによる無敵カウントの加算を行わない
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 356,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
		},		
	]
})

vectmpl.add({
	number = 371, // 定義番号

	name = "vec_42_ch",
	prio_vector = 601, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 3, // テーブル数
	tbl = 
	[
		{
			ukemitime = 31, // 基本受け身不可時間
			vector_num = 22, // 使用ベクトル番号
			hit_pattern = 346,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = 3, // 床受け身番号
		},
		{
			vector_num = 10, // 10 launch vec
			hit_pattern = 320, // 353 old
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -1010, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = 3, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_SlideDown", // 発生エフェクト名
			flag_noboundmutekiplus = true, // バウンドによる無敵カウントの加算を行わない
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 354,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},				
		
	]
})

vectmpl.add({
	number = 380, // 定義番号

	name = "ceiling_bound",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない
	downhit_vector = 237, // flag_down で移行するベクトル番号
	//reflexhit_vector = 142, //再帰ヒット時は通常ベクトル
	
	hitflag_set = 20, // 「当たった時」にセットするフラグ（0-31）
	hitflag_check = 20, // 「当たった時」にチェックするフラグ（0-31）
	hitflag_vector = 142, // hitflag_check が有効だった場合に移行するベクトルテーブル番号

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 4, // テーブル数
	tbl = 
	[
		{
			ukemitime = 29, // 基本受け身不可時間
			vector_num = 330, // 使用ベクトル番号
			hit_pattern = 333, //333 spinny boy
			vector_time = 6, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			//out_effect_name = "Eff_Hit_SlideDown", // 発生エフェクト名
			//flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			ukemitime = -2, // 基本受け身不可時間
			vector_num = 331, // 使用ベクトル番号
			hit_pattern = 346, //332代用
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = -1, // 床受け身番号
			out_effect_name = "Eff_WallBound", // 発生エフェクト名
			//flag_noboundmutekiplus = true, // 激突時の無敵カウント加算無し
		},
		{
			vector_num = 42, // 使用ベクトル番号
			hit_pattern = 353,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -1010, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = 1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_PrecipitateDown", // 発生エフェクト名
			flag_noboundmutekiplus = true, // バウンドによる無敵カウントの加算を行わない
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 354,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名
		},			
	]
})

vectmpl.add({
	number = 390, // 定義番号

	name = "hyd_i5c",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない
	counterhit_vector = 392, //しりもち

	Finalize_Hit = "Mv_Modori_YarareS",			
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）
			vector_num = 2, // 使用ベクトル番号
			hit_pattern = 307,
			vector_time = def_VL_VT_Hit_Std_LV3, // 発生時間
			vector_returntime = def_VL_VT_Hit_Std_LV3, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_B", // 発生エフェクト名
		},
	]
})

vectmpl.add({
	number = 391, // 定義番号

	name = "追撃ダウン",
	prio_vector = 100, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",
	counterhit_vector = 392, //しりもち

	tblcount = 2, // テーブル数
	tbl = 
	[
		{
			ukemitime = 25, // 基本受け身不可時間
			vector_num = 7, // 使用ベクトル番号
			hit_pattern = 320,
			vector_time = -1, // 発生時間
			vector_returntime = 8, // 壁反射ベクトル
			ground_ukemi_num = 2, // 床受け身番号
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 350,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},
	]
})

vectmpl.add({
	number = 389, // 定義番号

	name = "hyd_i5c_crouch",
	prio_vector = 10, // ベクトル優先度
	ko_vector = def_VL_GroundKoVector, // KO時のベクトル修正 0 だと修正しない
	counterhit_vector = 392, //しりもち

	Finalize_Hit = "Mv_Modori_YarareC",			
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 1, // テーブル数
	tbl = 
	[
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 2, // 使用ベクトル番号
			hit_pattern = 308,
			vector_time = def_VL_VT_Hit_Cro_LV3, // 発生時間
			vector_returntime = 21, // 壁反射ベクトル
			ukemitime = -1, // 受身不能時間 -1:空中受け身不可
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			flag_isgroundvector = true, // 地上のけぞりベクトル			
			out_effect_name = "Eff_Hit_Ground_B", // 発生エフェクト名
		},
	]
})

vectmpl.add({
	number = 392, // 定義番号

	name = "hyd_ch_i5c_chvec",
	prio_vector = 391, // ベクトル優先度
	ko_vector = 0, // KO時のベクトル修正 0 だと修正しない

	Finalize_Hit = "Mv_Modori_Down",
	power=def_VL_Pow_LV3, //強やられレベル

	tblcount = 3, // テーブル数
	tbl = 
	[
		{
			ukemitime = 31, // 基本受け身不可時間
			vector_num = 23, // 使用ベクトル番号
			hit_pattern = 324,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ground_ukemi_num = 3, // 床受け身番号
			
			flag_noboundmutekiplus = true,
		},
		{
			vector_num = 400, // 使用ベクトル番号
			hit_pattern = 320, // 353 old
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -1010, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = 3, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_SlideDown", // 発生エフェクト名
			flag_noboundmutekiplus = true, // バウンドによる無敵カウントの加算を行わない
		},
		{
			vector_type = 0, // 状態 0-地上 1-空中 （基本値 1）		
			vector_num = 20, // 使用ベクトル番号
			hit_pattern = 354,
			vector_time = -1, // 発生時間
			vector_returntime = 0, // 壁反射ベクトル
			ukemitime = -2, // 受身不能時間 -1:空中受け身不可 -2:引継ぎ -1000以下:((n+1000)*-1)加算
			ground_ukemi_num = -1, // 床受け身番号 -1:地上受け身不可
			out_effect_name = "Eff_Hit_Down", // 発生エフェクト名					
		},				
		
	]
})


foreach( i, v in vectmpl.usevectornum )
{
	if( v==0 )
	{
		local find = 0; //定義してあるか？
		foreach( z in VectorList.Tbl )
		{
			if( z[0] == i ) find = 1; //定義してあるのにどこにも使ってない
		}
		if( find && def_VL_PrintDebugMessage ) print( format("\n VectorList.Tbl[%3d]が未使用です",i ) );
	}
}

//↓デバッグ用ベクトル一覧出力
/*
for( local i=0;i<256;i++ )
{
	local target = vectmpl.table[i];
	print(format("\n%3d ",i));
	if( "number" in target )
	{
		local name = ("name" in target)? target.name : "";
		print(name);
	}
	else
	{
	
	}
}
//↑デバッグ用ベクトル一覧出力
*/

//vectmpl.tableから実際に使うベクトルテーブルリストを作成する

VectorList.SetTbl.resize( 1024 ); //サイズを合わせる

local findcount = 0; //見つけた数

//print("\n");
foreach( i, v in vectmpl.table )
{
	if( "number" in v)
	{
		/*
		print(format(
		"%3d vec: %3d %s \n",findcount,i,v.name
		
		));
		*/
		VectorList.SetTbl[findcount] = v; //入れる
		findcount++;
	}
}

VectorList.SetTbl.resize( findcount ); //サイズを合わせる





//print("\name:"+vectmpl.table[10].name);
//print("\nukemitime:"+vectmpl.table[10].tbl[0].ukemitime);

print( format("\n[VectorTable] %d個のベクトルを登録しました",findcount ));